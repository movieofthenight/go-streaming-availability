/*
Streaming Availability API

Streaming Availability API allows getting streaming availability information of movies and series; and querying the list of available shows on streaming services such as Netflix, Disney+, Apple TV, Max and Hulu across 59 countries!

API version: 3.4.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package streaming

import (
	"encoding/json"
)

// checks if the Addon type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Addon{}

// Addon Details of an addon.
type Addon struct {
	// Id of the addon.
	Id string `json:"id"`
	// Name of the addon.
	DisplayName string `json:"displayName"`
	// Link to the homepage of the addon.
	HomePage string `json:"homePage"`
	// Associated theme color hex code of the addon.
	ThemeColorCode string `json:"themeColorCode"`
	// Link to the logo of the addon. Deprecated, use \"images\" instead.
	// Deprecated
	Image string `json:"image"`
	Images ImageSet `json:"images"`
}

// NewAddon instantiates a new Addon object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddon(id string, displayName string, homePage string, themeColorCode string, image string, images ImageSet) *Addon {
	this := Addon{}
	this.Id = id
	this.DisplayName = displayName
	this.HomePage = homePage
	this.ThemeColorCode = themeColorCode
	this.Image = image
	this.Images = images
	return &this
}

// NewAddonWithDefaults instantiates a new Addon object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddonWithDefaults() *Addon {
	this := Addon{}
	return &this
}

// GetId returns the Id field value
func (o *Addon) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Addon) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Addon) SetId(v string) {
	o.Id = v
}

// GetDisplayName returns the DisplayName field value
func (o *Addon) GetDisplayName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value
// and a boolean to check if the value has been set.
func (o *Addon) GetDisplayNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DisplayName, true
}

// SetDisplayName sets field value
func (o *Addon) SetDisplayName(v string) {
	o.DisplayName = v
}

// GetHomePage returns the HomePage field value
func (o *Addon) GetHomePage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.HomePage
}

// GetHomePageOk returns a tuple with the HomePage field value
// and a boolean to check if the value has been set.
func (o *Addon) GetHomePageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HomePage, true
}

// SetHomePage sets field value
func (o *Addon) SetHomePage(v string) {
	o.HomePage = v
}

// GetThemeColorCode returns the ThemeColorCode field value
func (o *Addon) GetThemeColorCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ThemeColorCode
}

// GetThemeColorCodeOk returns a tuple with the ThemeColorCode field value
// and a boolean to check if the value has been set.
func (o *Addon) GetThemeColorCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ThemeColorCode, true
}

// SetThemeColorCode sets field value
func (o *Addon) SetThemeColorCode(v string) {
	o.ThemeColorCode = v
}

// GetImage returns the Image field value
// Deprecated
func (o *Addon) GetImage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Image
}

// GetImageOk returns a tuple with the Image field value
// and a boolean to check if the value has been set.
// Deprecated
func (o *Addon) GetImageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Image, true
}

// SetImage sets field value
// Deprecated
func (o *Addon) SetImage(v string) {
	o.Image = v
}

// GetImages returns the Images field value
func (o *Addon) GetImages() ImageSet {
	if o == nil {
		var ret ImageSet
		return ret
	}

	return o.Images
}

// GetImagesOk returns a tuple with the Images field value
// and a boolean to check if the value has been set.
func (o *Addon) GetImagesOk() (*ImageSet, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Images, true
}

// SetImages sets field value
func (o *Addon) SetImages(v ImageSet) {
	o.Images = v
}

func (o Addon) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Addon) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["displayName"] = o.DisplayName
	toSerialize["homePage"] = o.HomePage
	toSerialize["themeColorCode"] = o.ThemeColorCode
	toSerialize["image"] = o.Image
	toSerialize["images"] = o.Images
	return toSerialize, nil
}

type NullableAddon struct {
	value *Addon
	isSet bool
}

func (v NullableAddon) Get() *Addon {
	return v.value
}

func (v *NullableAddon) Set(val *Addon) {
	v.value = val
	v.isSet = true
}

func (v NullableAddon) IsSet() bool {
	return v.isSet
}

func (v *NullableAddon) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddon(val *Addon) *NullableAddon {
	return &NullableAddon{value: val, isSet: true}
}

func (v NullableAddon) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddon) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


