/*
Streaming Availability API

Streaming Availability API allows getting streaming availability information of movies and series; and querying the list of available shows on streaming services such as Netflix, Disney+, Apple TV, Max and Hulu across 59 countries!

API version: 3.4.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package streaming

import (
	"encoding/json"
)

// checks if the GenresResponseSchema type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GenresResponseSchema{}

// GenresResponseSchema struct for GenresResponseSchema
type GenresResponseSchema struct {
	// Map of genre id to genre name.
	Result map[string]string `json:"result"`
}

// NewGenresResponseSchema instantiates a new GenresResponseSchema object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGenresResponseSchema(result map[string]string) *GenresResponseSchema {
	this := GenresResponseSchema{}
	this.Result = result
	return &this
}

// NewGenresResponseSchemaWithDefaults instantiates a new GenresResponseSchema object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGenresResponseSchemaWithDefaults() *GenresResponseSchema {
	this := GenresResponseSchema{}
	return &this
}

// GetResult returns the Result field value
func (o *GenresResponseSchema) GetResult() map[string]string {
	if o == nil {
		var ret map[string]string
		return ret
	}

	return o.Result
}

// GetResultOk returns a tuple with the Result field value
// and a boolean to check if the value has been set.
func (o *GenresResponseSchema) GetResultOk() (*map[string]string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Result, true
}

// SetResult sets field value
func (o *GenresResponseSchema) SetResult(v map[string]string) {
	o.Result = v
}

func (o GenresResponseSchema) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GenresResponseSchema) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["result"] = o.Result
	return toSerialize, nil
}

type NullableGenresResponseSchema struct {
	value *GenresResponseSchema
	isSet bool
}

func (v NullableGenresResponseSchema) Get() *GenresResponseSchema {
	return v.value
}

func (v *NullableGenresResponseSchema) Set(val *GenresResponseSchema) {
	v.value = val
	v.isSet = true
}

func (v NullableGenresResponseSchema) IsSet() bool {
	return v.isSet
}

func (v *NullableGenresResponseSchema) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGenresResponseSchema(val *GenresResponseSchema) *NullableGenresResponseSchema {
	return &NullableGenresResponseSchema{value: val, isSet: true}
}

func (v NullableGenresResponseSchema) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGenresResponseSchema) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


