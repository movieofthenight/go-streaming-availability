/*
Streaming Availability API

Streaming Availability API allows getting streaming availability information of movies and series; and querying the list of available shows on streaming services such as Netflix, Disney+, Apple TV, Max and Hulu across 59 countries!

API version: 4.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package streaming

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the HorizontalImage type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HorizontalImage{}

// HorizontalImage Horizontal image of a show.
type HorizontalImage struct {
	// Link to the 360px wide version of the image.
	W360 string `json:"w360"`
	// Link to the 480px wide version of the image.
	W480 string `json:"w480"`
	// Link to the 720px wide version of the image.
	W720 string `json:"w720"`
	// Link to the 1080px wide version of the image.
	W1080 string `json:"w1080"`
	// Link to the 1440px wide version of the image.
	W1440 string `json:"w1440"`
}

type _HorizontalImage HorizontalImage

// NewHorizontalImage instantiates a new HorizontalImage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHorizontalImage(w360 string, w480 string, w720 string, w1080 string, w1440 string) *HorizontalImage {
	this := HorizontalImage{}
	this.W360 = w360
	this.W480 = w480
	this.W720 = w720
	this.W1080 = w1080
	this.W1440 = w1440
	return &this
}

// NewHorizontalImageWithDefaults instantiates a new HorizontalImage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHorizontalImageWithDefaults() *HorizontalImage {
	this := HorizontalImage{}
	return &this
}

// GetW360 returns the W360 field value
func (o *HorizontalImage) GetW360() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.W360
}

// GetW360Ok returns a tuple with the W360 field value
// and a boolean to check if the value has been set.
func (o *HorizontalImage) GetW360Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.W360, true
}

// SetW360 sets field value
func (o *HorizontalImage) SetW360(v string) {
	o.W360 = v
}

// GetW480 returns the W480 field value
func (o *HorizontalImage) GetW480() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.W480
}

// GetW480Ok returns a tuple with the W480 field value
// and a boolean to check if the value has been set.
func (o *HorizontalImage) GetW480Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.W480, true
}

// SetW480 sets field value
func (o *HorizontalImage) SetW480(v string) {
	o.W480 = v
}

// GetW720 returns the W720 field value
func (o *HorizontalImage) GetW720() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.W720
}

// GetW720Ok returns a tuple with the W720 field value
// and a boolean to check if the value has been set.
func (o *HorizontalImage) GetW720Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.W720, true
}

// SetW720 sets field value
func (o *HorizontalImage) SetW720(v string) {
	o.W720 = v
}

// GetW1080 returns the W1080 field value
func (o *HorizontalImage) GetW1080() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.W1080
}

// GetW1080Ok returns a tuple with the W1080 field value
// and a boolean to check if the value has been set.
func (o *HorizontalImage) GetW1080Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.W1080, true
}

// SetW1080 sets field value
func (o *HorizontalImage) SetW1080(v string) {
	o.W1080 = v
}

// GetW1440 returns the W1440 field value
func (o *HorizontalImage) GetW1440() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.W1440
}

// GetW1440Ok returns a tuple with the W1440 field value
// and a boolean to check if the value has been set.
func (o *HorizontalImage) GetW1440Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.W1440, true
}

// SetW1440 sets field value
func (o *HorizontalImage) SetW1440(v string) {
	o.W1440 = v
}

func (o HorizontalImage) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HorizontalImage) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["w360"] = o.W360
	toSerialize["w480"] = o.W480
	toSerialize["w720"] = o.W720
	toSerialize["w1080"] = o.W1080
	toSerialize["w1440"] = o.W1440
	return toSerialize, nil
}

func (o *HorizontalImage) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"w360",
		"w480",
		"w720",
		"w1080",
		"w1440",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varHorizontalImage := _HorizontalImage{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varHorizontalImage)

	if err != nil {
		return err
	}

	*o = HorizontalImage(varHorizontalImage)

	return err
}

type NullableHorizontalImage struct {
	value *HorizontalImage
	isSet bool
}

func (v NullableHorizontalImage) Get() *HorizontalImage {
	return v.value
}

func (v *NullableHorizontalImage) Set(val *HorizontalImage) {
	v.value = val
	v.isSet = true
}

func (v NullableHorizontalImage) IsSet() bool {
	return v.isSet
}

func (v *NullableHorizontalImage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHorizontalImage(val *HorizontalImage) *NullableHorizontalImage {
	return &NullableHorizontalImage{value: val, isSet: true}
}

func (v NullableHorizontalImage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHorizontalImage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


