openapi: 3.1.0
info:
  description: "Streaming Availability API allows getting streaming availability information\
    \ of movies and series; and querying the list of available shows on streaming\
    \ services such as Netflix, Disney+, Apple TV, Max and Hulu across 59 countries!"
  title: Streaming Availability API
  version: 4.0.0
servers:
- description: Official API Server
  url: https://streaming-availability.p.rapidapi.com
security:
- X-Rapid-API-Key: []
tags:
- externalDocs:
    description: Official Documentation
    url: https://docs.movieofthenight.com/resource/shows
  name: shows
  x-schema: show
- externalDocs:
    description: Official Documentation
    url: https://docs.movieofthenight.com/resource/countries
  name: countries
  x-schema: country
- externalDocs:
    description: Official Documentation
    url: https://docs.movieofthenight.com/resource/genres
  name: genres
  x-schema: genre
- externalDocs:
    description: Official Documentation
    url: https://docs.movieofthenight.com/resource/changes
  name: changes
  x-schema: change
paths:
  /countries:
    get:
      description: |
        Get all the supported countries and the list of the supported services and their details for each country.

        Details of services include names, logos, supported streaming types (subscription, rent, buy, free etc.) and list of available addons/channels.
      externalDocs:
        description: Official Documentation
        url: https://docs.movieofthenight.com/resource/countries#get-all-countries
      operationId: getCountries
      parameters:
      - $ref: '#/components/parameters/outputLanguageParam'
      responses:
        "200":
          $ref: '#/components/responses/countriesResponse'
        default:
          $ref: '#/components/responses/errorResponse'
      summary: Get all Countries
      tags:
      - countries
  /countries/{country-code}:
    get:
      description: |
        Get a country and the list of the supported services and their details.

        Details of services include names, logos, supported streaming types (subscription, rent, buy, free etc.) and list of available addons/channels.
      externalDocs:
        description: Official Documentation
        url: https://docs.movieofthenight.com/resource/countries#get-a-country
      operationId: getCountry
      parameters:
      - $ref: '#/components/parameters/countryCodeParam'
      - $ref: '#/components/parameters/outputLanguageParam'
      responses:
        "200":
          $ref: '#/components/responses/countryResponse'
        default:
          $ref: '#/components/responses/errorResponse'
      summary: Get a Country
      tags:
      - countries
  /genres:
    get:
      description: Get the list of supported genres.
      externalDocs:
        description: Official Documentation
        url: https://docs.movieofthenight.com/resource/genres#get-all-genres
      operationId: getGenres
      parameters:
      - $ref: '#/components/parameters/outputLanguageParam'
      responses:
        "200":
          $ref: '#/components/responses/genresResponse'
        default:
          $ref: '#/components/responses/errorResponse'
      summary: Get all Genres
      tags:
      - genres
  /shows/{id}:
    get:
      description: "Get the details of a show via id, imdbId or tmdbId, including\
        \ the global streaming availability info."
      externalDocs:
        description: Official Documentation
        url: https://docs.movieofthenight.com/resource/shows#get-a-show
      operationId: getShow
      parameters:
      - $ref: '#/components/parameters/idParam'
      - $ref: '#/components/parameters/optionalCountryParam'
      - $ref: '#/components/parameters/getGranularityParam'
      - $ref: '#/components/parameters/outputLanguageParam'
      responses:
        "200":
          $ref: '#/components/responses/showResponse'
        "404":
          $ref: '#/components/responses/notFoundResponse'
        default:
          $ref: '#/components/responses/errorResponse'
      summary: Get a Show
      tags:
      - shows
  /shows/search/filters:
    get:
      description: |
        Search through the catalog of the given streaming services in the given country.
        Provides filters such as show language, genres, keyword and release year.
        Output includes all the information about the shows,
        such as title, IMDb ID, TMDb ID, release year,
        deep links to streaming services,
        available subtitles, audios, available video quality
        and many more!
        Apart from the info about the given country-service combinations,
        output also includes information about streaming availability in the other services for the given country.
        Streaming availability info from the other countries are not included in the response.

        When show_type is movie or series_granularity is show, items per page is 20.
        When show_type is series and series_granularity is episode items per page is 10.
        Otherwise, items per page is 15.
      externalDocs:
        description: Official Documentation
        url: https://docs.movieofthenight.com/resource/shows#search-shows-by-filters
      operationId: searchShowsByFilters
      parameters:
      - $ref: '#/components/parameters/countryParam'
      - $ref: '#/components/parameters/catalogsParam'
      - $ref: '#/components/parameters/outputLanguageParam'
      - $ref: '#/components/parameters/showTypeParam'
      - $ref: '#/components/parameters/genresParam'
      - $ref: '#/components/parameters/genresRelationParam'
      - $ref: '#/components/parameters/originalLanguageParam'
      - $ref: '#/components/parameters/yearMinParam'
      - $ref: '#/components/parameters/yearMaxParam'
      - $ref: '#/components/parameters/ratingMinParam'
      - $ref: '#/components/parameters/ratingMaxParam'
      - $ref: '#/components/parameters/keywordParam'
      - $ref: '#/components/parameters/searchGranularityParam'
      - $ref: '#/components/parameters/searchFiltersOrderByParam'
      - $ref: '#/components/parameters/searchFiltersOrderDirectionParam'
      - $ref: '#/components/parameters/cursorParam'
      responses:
        "200":
          $ref: '#/components/responses/searchByFiltersResponse'
        default:
          $ref: '#/components/responses/errorResponse'
      summary: Search Shows by filters
      tags:
      - shows
  /shows/search/title:
    get:
      description: |
        Search for movies and series by a title.
        Maximum amount of items returned are 20
        unless there are more than 20 shows with the exact given title input.
        In that case all the items have 100% match with the title will be returned.

        Streaming availability info for the target country is included in the response,
        but not for the other countries.

        Results might include shows that are not streamable in the target country.
        Only criteria for the search are the title and the show type.

        No pagination is supported.
      externalDocs:
        description: Official Documentation
        url: https://docs.movieofthenight.com/resource/shows#search-shows-by-title
      operationId: searchShowsByTitle
      parameters:
      - $ref: '#/components/parameters/titleParam'
      - $ref: '#/components/parameters/showTypeParam'
      - $ref: '#/components/parameters/countryParam'
      - $ref: '#/components/parameters/searchGranularityParam'
      - $ref: '#/components/parameters/outputLanguageParam'
      responses:
        "200":
          $ref: '#/components/responses/searchByTitleResponse'
        default:
          $ref: '#/components/responses/errorResponse'
      summary: Search Shows by title
      tags:
      - shows
  /changes:
    get:
      description: |
        Query the new, removed, updated, expiring or upcoming movies/series/seasons/episodes in a given list of streaming services.
        Results are ordered by the date of the changes.
        Changes listed per page is 25.

        Changes are listed under changes field, and shows affected by these changes are listed under shows field.
      externalDocs:
        description: Official Documentation
        url: https://docs.movieofthenight.com/resource/shows#search-shows-by-title
      operationId: getChanges
      parameters:
      - $ref: '#/components/parameters/countryParam'
      - $ref: '#/components/parameters/catalogsParam'
      - $ref: '#/components/parameters/changeTypeParam'
      - $ref: '#/components/parameters/itemTypeParam'
      - $ref: '#/components/parameters/showTypeParam'
      - $ref: '#/components/parameters/fromParam'
      - $ref: '#/components/parameters/toParam'
      - $ref: '#/components/parameters/includeUnknownDatesParam'
      - $ref: '#/components/parameters/cursorParam'
      - $ref: '#/components/parameters/changesOrderDirectionParam'
      - $ref: '#/components/parameters/outputLanguageParam'
      responses:
        "200":
          $ref: '#/components/responses/changesResponse'
        default:
          $ref: '#/components/responses/errorResponse'
      summary: Get Changes
      tags:
      - changes
components:
  parameters:
    catalogsParam:
      description: |
        A comma separated list of up to 32 catalogs to search in.
        See /countries endpoint to get the supported services in each country and their ids.

        When multiple catalogs are passed as a comma separated list, any show that is in at least one of the catalogs will be included in the result.

        If no catalogs are passed, the endpoint will search in all the available catalogs in the country.

        Syntax of the catalogs supplied in the list can be as the followings:

        - <sevice_id>: Searches in the entire catalog of that service,
        including (if applicable) rentable, buyable shows or shows available through addons e.g. netflix, prime, apple

        - <sevice_id>.<streaming_option_type>: Only returns the shows that are available in that service with the given streaming option type.
        Valid streaming option types are subscription, free, rent, buy and addon
        e.g. peacock.free only returns the shows on Peacock that are free to watch,
        prime.subscription only returns the shows on Prime Video that are available to watch with a Prime subscription.
        hulu.addon only returns the shows on Hulu that are available via an addon, prime.rent only returns the shows on Prime Video that are rentable.

        - <sevice_id>.addon.<addon_id>: Only returns the shows that are available in that service with the given addon.
        Check /countries endpoint to fetch the available addons for a service in each country. Some sample values are: hulu.addon.hbo, prime.addon.hbomaxus.
      examples:
        Netflix:
          description: Search in Netflix
          value: netflix
        Amazon Prime Video:
          description: Search in Amazon Prime Video among the shows available via
            a Prime subscription.
          value: prime.subscription
        Buy/Rent:
          description: Search among buyable/rentable shows in Amazon Prime Video and
            Apple TV.
          value: "prime.rent,prime.buy,apple.rent,apple.buy"
        HBO Max and HBO Max Addons:
          description: Search in HBO Max itself and HBO Max channels in Amazon Prime
            Video and Hulu
          value: "hbo,hulu.addon.hbo,prime.addon.hbomaxus"
        Hulu + HBO Max Addon:
          description: Search in Hulu and HBO Max addon in Hulu.
          value: "hulu.subscription,hulu.addon.hbo"
        Apple TV Channels:
          description: Search in all the Apple TV channels
          value: apple.addon
        Free Peacock Shows:
          description: Search in free shows on Peacock.
          value: peacock.free
      explode: false
      in: query
      name: catalogs
      required: false
      schema:
        items:
          type: string
        type: array
      style: form
    changeTypeParam:
      description: Type of changes to query.
      explode: true
      in: query
      name: change_type
      required: true
      schema:
        $ref: '#/components/schemas/changeType'
      style: form
    showTypeParam:
      description: |
        Type of shows to search in.
        If not supplied, both movies and series will be included in the search results.
      explode: true
      in: query
      name: show_type
      required: false
      schema:
        $ref: '#/components/schemas/showType'
      style: form
    itemTypeParam:
      description: |
        Type of items to search in.
        If item_type is show, you can use show_type parameter to only search for movies or series.
      explode: true
      in: query
      name: item_type
      required: true
      schema:
        $ref: '#/components/schemas/itemType'
      style: form
    genresParam:
      description: |
        A comma seperated list of genre ids to only search within the shows in those genre.
        See /genres endpoint to see the available genres and their ids.
        Use genres_relation parameter to specify between returning shows that have at least one of the given genres
        or returning shows that have all of the given genres.
      examples:
        Action:
          description: Action
          value: action
        Romantic Comedy:
          description: Romantic Comedy
          value: "romantic,comedy"
        War Drama:
          description: War Drama
          value: "war,drama"
        Science Fiction:
          description: Science Fiction
          value: scifi
      explode: false
      in: query
      name: genres
      required: false
      schema:
        items:
          $ref: '#/components/schemas/genreId'
        type: array
      style: form
    genresRelationParam:
      description: |
        Only used when there are multiple genres supplied in genres parameter.

        When or, the endpoint returns any show that has at least one of the given genres.
        When and, it only returns the shows that have all of the given genres.
      explode: true
      in: query
      name: genres_relation
      required: false
      schema:
        default: and
        enum:
        - and
        - or
        type: string
        x-enumDescriptions:
          and: Only bring results that include all of the given genres.
          or: Bring any result that includes at least one of the given genres.
      style: form
    fromParam:
      description: |
        [Unix Time Stamp](https://www.unixtimestamp.com/) to only query the changes happened/happening after this date (inclusive).
        For past changes such as new, removed or updated, the timestamp must be between today and 31 days ago.
        For future changes such as expiring or upcoming, the timestamp must be between today and 31 days from now in the future.

        If not supplied, the default value for past changes is 31 days ago, and for future changes is today.
      examples:
        "1672531200":
          description: "Unix timestamp of January 1, 2023. Note that this is just\
            \ an example value and you cannot directly use this timestamp as it is\
            \ not within 31 days."
          value: 1672531200
        "1690070400":
          description: "Unix timestamp of July 23, 2023. Note that this is just an\
            \ example value and you cannot directly use this timestamp as it is not\
            \ within 31 days."
          value: 1690070400
      explode: true
      in: query
      name: from
      required: false
      schema:
        format: int64
        type: integer
      style: form
    toParam:
      description: |
        [Unix Time Stamp](https://www.unixtimestamp.com/) to only query the changes happened/happening before this date (inclusive).
        For past changes such as new, removed or updated, the timestamp must be between today and 31 days ago.
        For future changes such as expiring or upcoming, the timestamp must be between today and 31 days from now in the future.

        If not supplied, the default value for past changes is today, and for future changes is 31 days from now.
      examples:
        "1672531200":
          description: "Unix timestamp of January 1, 2023. Note that this is just\
            \ an example value and you cannot directly use this timestamp as it is\
            \ not within 31 days."
          value: 1672531200
        "1690070400":
          description: "Unix timestamp of July 23, 2023. Note that this is just an\
            \ example value and you cannot directly use this timestamp as it is not\
            \ within 31 days."
          value: 1690070400
      explode: true
      in: query
      name: to
      required: false
      schema:
        format: int64
        type: integer
      style: form
    includeUnknownDatesParam:
      description: |
        Whether to include the changes with unknown dates.
        past changes such as new, removed or updated will always have a timestamp thus this parameter does not affect them.
        future changes such as expiring or upcoming may not have a timestamp if the exact date is not known
        (e.g. some services do not explicitly state the exact date of some of the upcoming/expiring shows).
        If set as true, the changes with unknown dates will be included in the response.
        If set as false, the changes with unknown dates will be excluded from the response.

        When ordering, the changes with unknown dates will be treated as if their timestamp is 0.
        Thus, they will appear first in the ascending order and last in the descending order.
      explode: true
      in: query
      name: include_unknown_dates
      required: false
      schema:
        default: false
        type: boolean
      style: form
    ratingMinParam:
      description: Minimum rating of the shows.
      examples:
        "75":
          description: Only show results that has a rating of at least 75 out of 100.
          value: 75.0
        "60":
          description: Only show results that has a rating of least 60 out of 100.
          value: 60.0
      explode: true
      in: query
      name: rating_min
      required: false
      schema:
        maximum: 100
        minimum: 0
        type: integer
      style: form
    ratingMaxParam:
      description: Maximum rating of the shows.
      examples:
        "80":
          description: Only show results that has a rating of at most 80 out of 100.
          value: 80.0
        "50":
          description: Only show results that has a rating of at most 50 out of 100.
          value: 50.0
      explode: true
      in: query
      name: rating_max
      required: false
      schema:
        maximum: 100
        minimum: 0
        type: integer
      style: form
    yearMinParam:
      description: Minimum release/air year of the shows.
      examples:
        "1980":
          description: Only show results that released/aired after 1980.
          value: 1980.0
        "2020":
          description: Only show results that released/aired after 2020.
          value: 2020.0
      explode: true
      in: query
      name: year_min
      required: false
      schema:
        type: integer
      style: form
    yearMaxParam:
      description: Maximum release/air year of the shows.
      examples:
        "1990":
          description: Only show results that released/aired before 1990.
          value: 1980.0
        "2000":
          description: Only show results that released/aired before 2000.
          value: 2020.0
      explode: true
      in: query
      name: year_max
      required: false
      schema:
        type: integer
      style: form
    searchFiltersOrderByParam:
      description: |
        Determines the ordering of the shows.
        Make sure to set descending_order parameter as true when ordering by popularity or rating
        so that shows with the highest popularity or rating will be returned first.
      explode: true
      in: query
      name: order_by
      required: false
      schema:
        default: original_title
        enum:
        - original_title
        - release_date
        - rating
        - popularity_alltime
        - popularity_1year
        - popularity_1month
        - popularity_1week
        type: string
        x-enumDescriptions:
          original_title: Order alphabetically by original titles.
          release_date: Order by release/air date.
          rating: Order by rating.
          popularity_alltime: Order by all-time popularity in the country.
          popularity_1year: Order by popularity in the last 365 days in the country.
          popularity_1month: Order by popularity in the last 31 days in the country.
          popularity_1week: Order by popularity in the last 7 days in the country.
      style: form
    searchFiltersOrderDirectionParam:
      description: |
        Determines whether to order the results in ascending or descending order.

        Default value when ordering alphabetically or based on dates/times is asc.

        Default value when ordering by rating or popularity is desc.
      explode: true
      in: query
      name: order_direction
      required: false
      schema:
        $ref: '#/components/schemas/orderDirection'
      style: form
    changesOrderDirectionParam:
      description: |
        Determines whether to order the results in ascending or descending order.
      explode: true
      in: query
      name: order_direction
      required: false
      schema:
        $ref: '#/components/schemas/orderDirection'
      style: form
    originalLanguageParam:
      description: |
        [ISO 639-1](https://en.wikipedia.org/wiki/ISO_639-1) language code to only search within the shows whose original language matches with the provided language.
      examples:
        English:
          description: ISO 639-1 code of English.
          value: en
        Spanish:
          description: ISO 639-1 code of Spanish.
          value: es
      explode: true
      in: query
      name: show_original_language
      required: false
      schema:
        type: string
      style: form
    keywordParam:
      description: A keyword to only search within the shows have that keyword in
        their overview or title.
      examples:
        Zombie:
          description: Search for shows with zombies.
          value: zombie
        Alien:
          description: Search for shows with aliens.
          value: alien
      explode: true
      in: query
      name: keyword
      required: false
      schema:
        type: string
      style: form
    titleParam:
      description: Title phrase to search for.
      examples:
        Batman:
          description: Search for Batman shows.
          value: Batman
        Harry Potter:
          description: Search for Harry Potter shows.
          value: Harry Potter
      explode: true
      in: query
      name: title
      required: true
      schema:
        type: string
      style: form
    cursorParam:
      description: |
        Cursor is used for pagination.
        After each request, the response includes a hasMore boolean field to tell if there are more results that did not fit into the returned list.
        If it is set as true, to get the rest of the result set, send a new request
        (with the same parameters for other fields),
        and set the cursor parameter as the nextCursor value of the response of the previous request.
        Do not forget to escape the cursor value before putting it into a query as it might contain characters such as ?and &.

        The first request naturally does not require a cursor parameter.
      explode: true
      in: query
      name: cursor
      required: false
      schema:
        type: string
      style: form
    countryParam:
      description: |
        [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) code of the target country.
        See /countries endpoint to get the list of supported countries.
      examples:
        Canada:
          description: ISO 3166-1 alpha-2 code of Canada.
          value: ca
        United States:
          description: ISO 3166-1 alpha-2 code of United States.
          value: us
        Brazil:
          description: ISO 3166-1 alpha-2 code of Brazil.
          value: br
        United Kingdom:
          description: ISO 3166-1 alpha-2 code of United Kingdom.
          value: gb
        Germany:
          description: ISO 3166-1 alpha-2 code of Germany.
          value: de
        South Africa:
          description: ISO 3166-1 alpha-2 code of South Africa.
          value: za
        India:
          description: ISO 3166-1 alpha-2 code of India.
          value: in
        Japan:
          description: ISO 3166-1 alpha-2 code of Japan.
          value: jp
      explode: true
      in: query
      name: country
      required: true
      schema:
        type: string
      style: form
    optionalCountryParam:
      description: |
        [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) code of the optional target country.
        If this parameter is not supplied, global streaming availability across all the countries will be returned.
        If it is supplied, only the streaming availability info from the given country will be returned.
        If you are only interested in the streaming availability in a single country,
        then it is recommended to use this parameter to reduce the size of the response and increase the performance of the endpoint.
        See /countries endpoint to get the list of supported countries.
      examples:
        Canada:
          description: ISO 3166-1 alpha-2 code of Canada.
          value: ca
        United States:
          description: ISO 3166-1 alpha-2 code of United States.
          value: us
        Brazil:
          description: ISO 3166-1 alpha-2 code of Brazil.
          value: br
        United Kingdom:
          description: ISO 3166-1 alpha-2 code of United Kingdom.
          value: gb
        Germany:
          description: ISO 3166-1 alpha-2 code of Germany.
          value: de
        South Africa:
          description: ISO 3166-1 alpha-2 code of South Africa.
          value: za
        India:
          description: ISO 3166-1 alpha-2 code of India.
          value: in
        Japan:
          description: ISO 3166-1 alpha-2 code of Japan.
          value: jp
      explode: true
      in: query
      name: country
      required: false
      schema:
        type: string
      style: form
    idParam:
      description: |
        id of the show. You can also pass an IMDb Id or a TMDB Id as an id.
        The endpoint will automatically detect the type of the id and fetch the show accordingly.

        When passing an IMDb Id,
        it should be in the format of tt<numerical_id>. (e.g. tt0120338 for Titanic)

        When passing a TMDB Id,
        it should be in the format of movie/<numerical_id> for movies and tv/<numerical_id> for series.
        (e.g. tv/1396 for Breaking Bad and movie/597 for Titanic)

        If you are handcrafting the URL, make sure to encode the id parameter.
        (e.g. final path should look like /shows/movie%2F597 for Titanic with TMDb id).
        Here, %2F is the encoded version of /.
        To read more about URL encoding, you can check [this link](https://en.wikipedia.org/wiki/Percent-encoding).
      examples:
        Titanic (IMDb):
          description: IMDb ID of the movie Titanic.
          value: tt0120338
        Breaking Bad (IMDb):
          description: IMDb ID of the series Breaking Bad.
          value: tt0903747
        Titanic (TMDb):
          description: TMDb ID of the movie Titanic.
          value: movie/597
        Breaking Bad (TMDb):
          description: TMDb ID of the series Breaking Bad.
          value: tv/1396
      explode: false
      in: path
      name: id
      required: true
      schema:
        type: string
      style: simple
    countryCodeParam:
      description: |
        [ISO 3166-1 alpha-2 code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) of the country.
      examples:
        United States:
          description: United States
          value: us
        Canada:
          description: Canada
          value: ca
        United Kingdom:
          description: United Kingdom
          value: gb
        Germany:
          description: Germany
          value: de
      explode: false
      in: path
      name: country-code
      required: true
      schema:
        type: string
      style: simple
    outputLanguageParam:
      description: |
        [ISO 639-1 code](https://en.wikipedia.org/wiki/ISO_639-1) of the output language.
        Determines in which language the output  will be in.
      explode: true
      in: query
      name: output_language
      required: false
      schema:
        default: en
        enum:
        - en
        - es
        - tr
        - fr
        type: string
        x-enumDescriptions:
          en: English
          es: Spanish
          tr: Turkish
          fr: French
      style: form
    getGranularityParam:
      description: |
        series_granularity determines the level of detail for series. It does not affect movies.

        If series_granularity is show, then the output will not include season and episode info.

        If series_granularity is season, then the output will include season info but not episode info.

        If series_granularity is episode, then the output will include season and episode info.

        If you do not need season and episode info, then it is recommended to set series_granularity as show
        to reduce the size of the response and increase the performance of the endpoint.

        If you need deep links for individual seasons and episodes, then you should set series_granularity as episode.
        In this case response will include full streaming info for seasons and episodes,
        similar to the streaming info for movies and series; including deep links into seasons and episodes,
        individual subtitle/audio and video quality info etc.
      explode: true
      in: query
      name: series_granularity
      required: false
      schema:
        default: episode
        enum:
        - show
        - season
        - episode
        type: string
        x-enumDescriptions:
          show: Do not include season or episode info.
          season: Include season info but not episode info.
          episode: Include season and episode info.
      style: form
    searchGranularityParam:
      description: |
        series_granularity determines the level of detail for series. It does not affect movies.

        If series_granularity is show, then the output will not include season and episode info.

        If series_granularity is season, then the output will include season info but not episode info.

        If series_granularity is episode, then the output will include season and episode info.

        If you do not need season and episode info, then it is recommended to set series_granularity as show
        to reduce the size of the response and increase the performance of the endpoint.

        If you need deep links for individual seasons and episodes, then you should set series_granularity as episode.
        In this case response will include full streaming info for seasons and episodes,
        similar to the streaming info for movies and series; including deep links into seasons and episodes,
        individual subtitle/audio and video quality info etc.
      explode: true
      in: query
      name: series_granularity
      required: false
      schema:
        default: show
        enum:
        - show
        - season
        - episode
        type: string
        x-enumDescriptions:
          show: Do not include season or episode info.
          season: Include season info but not episode info.
          episode: Include season and episode info.
      style: form
  responses:
    countriesResponse:
      content:
        application/json:
          examples:
            Countries:
              externalValue: https://www.movieofthenight.com/v4/examples/countries
              summary: Countries
          schema:
            $ref: '#/components/schemas/countryMap'
      description: Details of the supported countries.
    countryResponse:
      content:
        application/json:
          examples:
            United States:
              externalValue: https://www.movieofthenight.com/v4/examples/countries/us
              summary: United States
              x-parameters:
                country-code: us
            Canada:
              externalValue: https://www.movieofthenight.com/v4/examples/countries/ca
              summary: Canada
              x-parameters:
                country-code: ca
            United Kingdom:
              externalValue: https://www.movieofthenight.com/v4/examples/countries/gb
              summary: United Kingdom
              x-parameters:
                country-code: gb
            Germany:
              externalValue: https://www.movieofthenight.com/v4/examples/countries/de
              summary: Germany
              x-parameters:
                country-code: de
            India:
              externalValue: https://www.movieofthenight.com/v4/examples/countries/in
              summary: India
              x-parameters:
                country-code: in
          schema:
            $ref: '#/components/schemas/country'
      description: Details of a country.
    genresResponse:
      content:
        application/json:
          examples:
            Genres in English:
              externalValue: https://www.movieofthenight.com/v4/examples/genres/en
              summary: Genres in English
              x-parameters:
                output_language: en
            Genres in French:
              externalValue: https://www.movieofthenight.com/v4/examples/genres/fr
              summary: Genres in French
              x-parameters:
                output_language: fr
          schema:
            description: Array of the supported genres.
            items:
              $ref: '#/components/schemas/genre'
            type: array
      description: Details of the supported genres.
    errorResponse:
      content:
        application/json:
          examples:
            Error:
              summary: Error
              value:
                message: An error occurred.
              x-statusCode: 400
          schema:
            $ref: '#/components/schemas/error'
      description: An error occurred.
    notFoundResponse:
      content:
        application/json:
          examples:
            Not Found:
              summary: Not Found
              value:
                message: Not Found
              x-statusCode: 404
          schema:
            $ref: '#/components/schemas/error'
      description: The show is not found.
    showResponse:
      content:
        application/json:
          examples:
            The Godfather via IMDb Id:
              externalValue: https://www.movieofthenight.com/v4/examples/shows/god-father
              summary: The Godfather via IMDb Id
              x-parameters:
                id: tt0068646
            The Dark Knight via TMDB Id:
              externalValue: https://www.movieofthenight.com/v4/examples/shows/the-dark-knight
              summary: The Dark Knight via TMDB Id
              x-parameters:
                id: movie/155
            The Queen's Gambit via IMDb Id:
              externalValue: https://www.movieofthenight.com/v4/examples/shows/the-queens-gambit
              summary: The Queen's Gambit via IMDb Id
              x-parameters:
                id: tt10048342
            Chernobyl via TMDB Id:
              externalValue: https://www.movieofthenight.com/v4/examples/shows/chernobyl
              summary: Chernobyl via TMDB Id
              x-parameters:
                id: tv/87108
          schema:
            $ref: '#/components/schemas/show'
      description: Details of the show.
    searchByFiltersResponse:
      content:
        application/json:
          examples:
            Zombie Movies on Netflix US:
              externalValue: https://www.movieofthenight.com/v4/examples/shows/search/filters/netflix-us-zombie-movies
              summary: Zombie Movies on Netflix US
              x-parameters:
                country: us
                catalogs: netflix
                keyword: zombie
                show_type: movie
            Highest Rated Science Fiction Shows on Disney+ CA:
              externalValue: https://www.movieofthenight.com/v4/examples/shows/search/filters/disney-ca-scifi-shows
              summary: Highest Rated Comedy Shows on Disney+ CA
              x-parameters:
                country: ca
                catalogs: disney
                genres: scifi
                order_by: rating
            Popular RomCom Series on Max Addon in Hulu US:
              externalValue: https://www.movieofthenight.com/v4/examples/shows/search/filters/hulu-us-max-addon-popular-romcom-series
              summary: Popular RomCom Series on Max Addon in Hulu US
              x-parameters:
                country: us
                catalogs: hulu.addon.max
                genres: "romance,comedy"
                order_by: popularity_1year
            Rentable Movies from 2000s on Apple TV and Prime Video UK:
              externalValue: https://www.movieofthenight.com/v4/examples/shows/search/filters/apple-prime-uk-rentable-2010s-movies
              summary: Rentable Movies from 2010s on Apple TV and Prime Video UK
              x-parameters:
                country: gb
                catalogs: "apple.rent,prime.rent"
                year_min: 2010
                year_max: 2019
                show_type: movie
                order_by: rating
          schema:
            $ref: '#/components/schemas/searchResult'
      description: Response to a search by filters query.
    searchByTitleResponse:
      content:
        application/json:
          examples:
            Batman Shows:
              externalValue: https://www.movieofthenight.com/v4/examples/shows/search/title/batman
              summary: Batman Shows
              x-parameters:
                title: Batman
            Harry Potter Movies:
              externalValue: https://www.movieofthenight.com/v4/examples/shows/search/title/harry-potter
              summary: Harry Potter Movies
              x-parameters:
                title: Harry Potter
                show_type: movie
            Doctor Who Series:
              externalValue: https://www.movieofthenight.com/v4/examples/shows/search/title/doctor-who
              summary: Doctor Who Series
              x-parameters:
                title: Doctor Who
                show_type: series
          schema:
            description: Array of the shows that match the title.
            items:
              $ref: '#/components/schemas/show'
            type: array
      description: Response to a search by title query.
    changesResponse:
      content:
        application/json:
          examples:
            New Netflix US Movies:
              externalValue: https://www.movieofthenight.com/v4/examples/changes/netflix/us/new/movie
              summary: New Netflix US Movies
              x-parameters:
                country: us
                catalogs: netflix
                change_type: new
                item_type: show
                show_type: movie
            Updated Max US Episodes:
              externalValue: https://www.movieofthenight.com/v4/examples/changes/hbo/us/updated/episode
              summary: Updated Max US Episodes
              x-parameters:
                country: us
                catalogs: hbo
                change_type: updated
                item_type: episode
            Expiring Hulu US Seasons:
              externalValue: https://www.movieofthenight.com/v4/examples/changes/hulu/us/expiring/season
              summary: Expiring Hulu US Seasons
              x-parameters:
                country: us
                catalogs: hulu.subscription
                change_type: expiring
                item_type: season
            Upcoming Netflix CA Series:
              externalValue: https://www.movieofthenight.com/v4/examples/changes/netflix/ca/upcoming/series
              summary: Upcoming Netflix CA Series
              x-parameters:
                country: ca
                catalogs: netflix
                change_type: upcoming
                item_type: show
                show_type: series
          schema:
            $ref: '#/components/schemas/changesResult'
      description: Response to a change set query.
  schemas:
    addon:
      additionalProperties: false
      description: Details of an addon.
      properties:
        id:
          description: Id of the addon.
          type: string
        name:
          description: Name of the addon.
          type: string
        homePage:
          description: Link to the homepage of the addon.
          type: string
        themeColorCode:
          description: Associated theme color hex code of the addon.
          type: string
        imageSet:
          $ref: '#/components/schemas/serviceImageSet'
      required:
      - homePage
      - id
      - imageSet
      - name
      - themeColorCode
      title: addon
    streamingOptionTypes:
      additionalProperties: false
      description: Availability of the streaming option types in the service.
      properties:
        addon:
          description: Whether there are shows available via an addon/channel subscription.
          type: boolean
        buy:
          description: Whether there are shows available to buy.
          type: boolean
        rent:
          description: Whether there are shows available for rental.
          type: boolean
        free:
          description: Whether there are free shows to watch.
          type: boolean
        subscription:
          description: Whether there are shows available via a paid subscription plan.
          type: boolean
      required:
      - addon
      - buy
      - free
      - rent
      - subscription
      title: streamingOptionTypes
    serviceImageSet:
      additionalProperties: false
      description: Image set of a service or an addon.
      properties:
        lightThemeImage:
          description: Link to the logo suitable for light themed background.
          type: string
        darkThemeImage:
          description: Link to the logo suitable for dark themed background.
          type: string
        whiteImage:
          description: Link to the logo that is all white.
          type: string
      required:
      - darkThemeImage
      - lightThemeImage
      - whiteImage
      title: serviceImageSet
    serviceInfo:
      additionalProperties: false
      description: Details of the streaming service localized according to the parent
        country.
      properties:
        id:
          description: Id of the service.
          type: string
        name:
          description: Name of the service.
          type: string
        homePage:
          description: Link to the homepage of the service.
          type: string
        themeColorCode:
          description: Associated theme color hex code of the service.
          type: string
        imageSet:
          $ref: '#/components/schemas/serviceImageSet'
      required:
      - homePage
      - id
      - imageSet
      - name
      - themeColorCode
      title: serviceInfo
    service:
      allOf:
      - $ref: '#/components/schemas/serviceInfo'
      - additionalProperties: false
        properties:
          streamingOptionTypes:
            $ref: '#/components/schemas/streamingOptionTypes'
          addons:
            description: Array of the supported addons in the service.
            items:
              $ref: '#/components/schemas/addon'
            type: array
        required:
        - addons
        - streamingOptionTypes
      description: Details of a streaming service localized according to the parent
        country.
      title: service
    streamingOptionsMap:
      additionalProperties:
        description: Array of the streaming options found in a country.
        items:
          $ref: '#/components/schemas/streamingOption'
      description: Map of the streaming options by the country code.
    country:
      additionalProperties: false
      description: |
        Countries are the primary way to get the supported streaming services and addons
        (such as list of available Apple TV and Prime Video channels) in a region.

        Each country object contains the country code, name and the list of supported streaming services.

        Details of the streaming services include localized
        logos, homepages, theme colors, and available streaming options and addons.
      properties:
        countryCode:
          description: |
            [ISO 3166-1 alpha-2 code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) of the country.
          type: string
        name:
          description: Name of the country.
          type: string
        services:
          description: "Array of the supported services in the country, ordered by\
            \ popularity."
          items:
            $ref: '#/components/schemas/service'
          type: array
      required:
      - countryCode
      - name
      - services
      title: country
    show:
      additionalProperties: false
      description: |
        A show object represents a movie or a series. Type of the show is determined by the showType property,
        which is either movie or series. Based on this type, some properties are omitted,
        for example a movie does not have seasonCount and episodeCount properties.

        Show object contains the details such as the title, overview, genres, cast, rating and images.
        You can find the streaming availability information under streamingOptions property.
        Each streaming option contains the service info, deep link, video quality, available audios and subtitles
        and more. It also includes the price if the show is available to buy or rent;
        and addon info if the show is available via an addon (such as Apple TV Channels, Prime Video Channels etc.).

        You can also find the seasons of the series under the seasons property,
        and the episodes of a season under the episodes property of the season object.
        Via the streamingOptions property of seasons and episodes,
        you can get the individual streaming options of them.
        These streaming options include the same set of properties as the show streaming options,
        so you can use them to get deep links to episodes and seasons, and to see available audios and subtitles.

        Note that seasons and episodes are not included in the search results
        unless you set the series_granularity parameter to seasons or episodes.
        For more info, check out the series_granularity parameter of the search endpoints.

        There are multiple ways to retrieve shows.
        You can retrieve a show by its IMDb or TMDB id via [/shows/{id}](#get-a-show) endpoint;
        you can search shows by their title via [/shows/search/title](#search-shows-by-title) endpoint;
        and you can search shows by filters such as genres, release year, rating etc.
        via [/shows/search/filters](#search-shows-by-filters) endpoint. This endpoint also supports pagination
        and offers advanced ordering options such as ordering by popularity, rating, release year etc.
      properties:
        itemType:
          description: Type of the item. Always show.
          type: string
        showType:
          $ref: '#/components/schemas/showType'
        id:
          description: Id of the show.
          type: string
        imdbId:
          description: "[IMDb](https://www.imdb.com/) id of the show."
          type: string
        tmdbId:
          description: "[TMDD](https://www.themoviedb.org/) id of the show."
          type: string
        title:
          description: Title of the show.
          type: string
        overview:
          description: A brief overview of the overall plot of the show.
          type: string
        releaseYear:
          description: The year that the movie was released.
          type: integer
        firstAirYear:
          description: The first year that the series aired.
          type: integer
        lastAirYear:
          description: The last year that the series aired.
          type: integer
        originalTitle:
          description: Original title of the show.
          type: string
        genres:
          description: Array of the genres of the show.
          items:
            $ref: '#/components/schemas/genre'
          type: array
        directors:
          description: Array of the directors of the movie.
          items:
            type: string
          type: array
        creators:
          description: Array of the creators of the series.
          items:
            type: string
          type: array
        cast:
          description: Array of the cast of the show.
          items:
            type: string
          type: array
        rating:
          description: Rating of the show. This is calculated by taking the average
            of ratings found online from multiple sources.
          maximum: 100
          minimum: 0
          type: integer
        seasonCount:
          description: Number of seasons that are either aired or announced for a
            series.
          type: integer
        episodeCount:
          description: Number of episodes that are either aired or announced for a
            series.
          type: integer
        imageSet:
          $ref: '#/components/schemas/showImageSet'
        streamingOptions:
          additionalProperties:
            description: Array of the streaming options found in a country.
            items:
              $ref: '#/components/schemas/streamingOption'
          description: Map of the streaming options by the country code.
        seasons:
          description: Array of the seasons belong to the series.
          items:
            $ref: '#/components/schemas/season'
          type: array
      required:
      - cast
      - genres
      - id
      - imageSet
      - imdbId
      - itemType
      - originalTitle
      - overview
      - rating
      - showType
      - streamingOptions
      - title
      - tmdbId
      title: show
    showImageSet:
      additionalProperties: false
      description: Image set of a show.
      properties:
        verticalPoster:
          $ref: '#/components/schemas/verticalImage'
        horizontalPoster:
          $ref: '#/components/schemas/horizontalImage'
        verticalBackdrop:
          $ref: '#/components/schemas/verticalImage'
        horizontalBackdrop:
          $ref: '#/components/schemas/horizontalImage'
      required:
      - horizontalPoster
      - verticalPoster
      title: showImageSet
    horizontalImage:
      additionalProperties: false
      description: Horizontal image of a show.
      properties:
        w360:
          description: Link to the 360px wide version of the image.
          type: string
        w480:
          description: Link to the 480px wide version of the image.
          type: string
        w720:
          description: Link to the 720px wide version of the image.
          type: string
        w1080:
          description: Link to the 1080px wide version of the image.
          type: string
        w1440:
          description: Link to the 1440px wide version of the image.
          type: string
      required:
      - w1080
      - w1440
      - w360
      - w480
      - w720
      title: horizontalImage
    verticalImage:
      additionalProperties: false
      description: Horizontal image of a show.
      properties:
        w240:
          description: Link to the 240px wide version of the image.
          type: string
        w360:
          description: Link to the 360px wide version of the image.
          type: string
        w480:
          description: Link to the 480px wide version of the image.
          type: string
        w600:
          description: Link to the 600px wide version of the image.
          type: string
        w720:
          description: Link to the 720px wide version of the image.
          type: string
      required:
      - w240
      - w360
      - w480
      - w600
      - w720
      title: verticalImage
    season:
      description: Details of a season.
      properties:
        itemType:
          description: Type of the item. Always season.
          type: string
        title:
          description: Title of the season.
          type: string
        firstAirYear:
          description: The first year that the season aired.
          type: integer
        lastAirYear:
          description: The last year that the season aired.
          type: integer
        streamingOptions:
          additionalProperties:
            description: Array of the streaming options found in a country.
            items:
              $ref: '#/components/schemas/streamingOption'
          description: Map of the streaming options by the country code.
        episodes:
          description: Array of the episodes belong to the season.
          items:
            $ref: '#/components/schemas/episode'
          type: array
      required:
      - firstAirYear
      - itemType
      - lastAirYear
      - streamingOptions
      - title
      title: season
    episode:
      description: Details of an episode.
      properties:
        itemType:
          description: Type of the item. Always episode.
          type: string
        title:
          description: Title of the episode.
          type: string
        airYear:
          description: The year that the episode aired.
          type: integer
        streamingOptions:
          additionalProperties:
            description: Array of the streaming options found in a country.
            items:
              $ref: '#/components/schemas/streamingOption'
          description: Map of the streaming options by the country code.
      required:
      - airYear
      - itemType
      - streamingOptions
      - title
      title: episode
    streamingOptionType:
      description: Type of the streaming option.
      enum:
      - free
      - subscription
      - buy
      - rent
      - addon
      type: string
      x-enumDescriptions:
        free: Free to watch.
        subscription: Available with a subscription.
        buy: Available to buy.
        rent: Available for rental.
        addon: Available via an addon.
    streamingOption:
      additionalProperties: false
      description: A streaming option.
      properties:
        service:
          $ref: '#/components/schemas/serviceInfo'
        type:
          $ref: '#/components/schemas/streamingOptionType'
        addon:
          $ref: '#/components/schemas/addon'
        link:
          description: |
            Deep link to the streaming option's page in the web app of the streaming service.
            Unlike videoLink, this field is guaranteed to be populated.
          type: string
        videoLink:
          description: |
            Deep link to the video associated with the streaming option.
            Omitted if there's no direct link to the video.
            Might have the same value as link.
          type: string
        quality:
          description: Maximum supported video quality of the streaming option.
          enum:
          - sd
          - hd
          - qhd
          - uhd
          type: string
          x-enumDescriptions:
            sd: Standard Definition
            hd: High Definition
            qhd: Quad High Definition
            uhd: Ultra High Definition
        audios:
          description: Array of the available audios.
          items:
            $ref: '#/components/schemas/locale'
          type: array
        subtitles:
          description: Array of the available subtitles.
          items:
            $ref: '#/components/schemas/subtitle'
          type: array
        price:
          $ref: '#/components/schemas/price'
        expiresSoon:
          description: Whether the streaming option expires within a month.
          type: boolean
        expiresOn:
          description: |
            [Unix Time Stamp](https://www.unixtimestamp.com/) of the date that the streaming option is expiring.
            In other words, last day to watch.
          format: int64
          type: integer
        availableSince:
          description: |
            [Unix Time Stamp](https://www.unixtimestamp.com/) of the date that this streaming option was detected.
          format: int64
          type: integer
      required:
      - audios
      - availableSince
      - expiresSoon
      - link
      - service
      - subtitles
      - type
      title: streamingOption
    price:
      additionalProperties: false
      description: |
        Price of the renting or buying the item.

        A movie and an episode that is available to buy or rent will always have a price.

        A series or a season that is available to buy or rent may have a price or not.
        If the price is available, that means the entire series or the season can be bought or rented as a whole
        for the given price.
        If the price is null, that means sub-items of the series or the season are available to buy or rent,
        but it is not possible to buy or rent the entire series or the season as a whole at once.
        In this case, the price of the sub-items can be found in the episodes or seasons array.
      properties:
        amount:
          description: Numerical amount of the price.
          type: string
        currency:
          description: "[ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) alphabetic\
            \ code of the currency."
          type: string
        formatted:
          description: "Formatted price, including both the amount and the currency."
          type: string
      required:
      - amount
      - currency
      - formatted
      title: price
    subtitle:
      properties:
        closedCaptions:
          description: Whether closed captions are available for the subtitle.
          type: boolean
        locale:
          $ref: '#/components/schemas/locale'
      required:
      - closedCaptions
      - locale
      title: subtitle
    locale:
      description: A language and optionally an associated region.
      properties:
        language:
          description: "[ISO 639-2](https://en.wikipedia.org/wiki/ISO_639-2) code\
            \ of the associated language with the locale."
          type: string
        region:
          description: |
            [ISO 3166-1 alpha-3](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3) code of the country,
            or [UN M49](https://en.wikipedia.org/wiki/UN_M49) code of the area associated with the locale.
          type: string
      required:
      - language
      title: locale
    genre:
      description: |
        Genres are used to categorize shows.
        Each genre object contains the id and name of the genre.
        When fetching genres via [/genres](#get-all-genres) endpoint, you can pass the output_language parameter
        to get the genre names in one of the supported languages.

        You can use genre ids to filter shows in the search endpoints.
      properties:
        id:
          description: Id of a genre.
          type: string
          enums:
          - action
          - adventure
          - animation
          - comedy
          - crime
          - documentary
          - drama
          - family
          - fantasy
          - history
          - horror
          - music
          - mystery
          - news
          - reality
          - romance
          - scifi
          - talk
          - thriller
          - war
          - western
        name:
          description: Name of the genre
          type: string
      required:
      - id
      - name
      title: genre
    genreId:
      description: Id of a genre.
      type: string
      enums:
      - action
      - adventure
      - animation
      - comedy
      - crime
      - documentary
      - drama
      - family
      - fantasy
      - history
      - horror
      - music
      - mystery
      - news
      - reality
      - romance
      - scifi
      - talk
      - thriller
      - war
      - western
    change:
      description: |
        A change object represents a future or past change in a streaming catalog.
        It contains the details such as the type of the change
        (could be past change such as like new, updated, removed;
        or a future change such as expiring, upcoming),
        the affected item type (show, season or episode), timestamp of the change and more.

        Via change endpoints, you can get the most recent updates in the streaming catalogs.
        On top of the changes, you can also get the details of the affected shows. Every change object
        has a showId field.
        You can find the list of shows affected by the changes in the shows field of the response, and match
        the show ids with the showId field of the change objects.
      properties:
        changeType:
          $ref: '#/components/schemas/changeType'
        itemType:
          $ref: '#/components/schemas/itemType'
        showId:
          description: Id of the show affected from the change.
          type: string
        showType:
          $ref: '#/components/schemas/showType'
        season:
          description: Number of the season affected from the change. Omitted if item_type
            is not seasonor episode.
          type: integer
        episode:
          description: Number of the episode affected from the change. Omitted if
            item_type is not episode.
          type: integer
        service:
          $ref: '#/components/schemas/serviceInfo'
        streamingOptionType:
          $ref: '#/components/schemas/streamingOptionType'
        addon:
          $ref: '#/components/schemas/addon'
        timestamp:
          description: |
            [Unix Time Stamp](https://www.unixtimestamp.com/) of the change.
            Past changes (new, updated, removed) will always have a timestamp.
            Future changes (expiring, upcoming) will have a timestamp if the exact date is known.
            If not, timestamp will be omitted, e.g. a show is known to be expiring soon, but the exact date is not known.
          format: int64
          type: integer
        link:
          description: |
            Deep link to the affected streaming option's page in the web app of the streaming service.
            This field is guaranteed to be populated when changeType is new, updated, expiring or removed.
            When changeType is upcoming, this field might be populated or null depending on if the link of the future streaming option is known.
          type: string
      required:
      - changeType
      - itemType
      - service
      - showId
      - showType
      - streamingOptionType
      title: change
    itemType:
      description: Type of an item.
      enum:
      - show
      - season
      - episode
      type: string
      x-enumDescriptions:
        show: "Show, either a movie or a series"
        season: Season
        episode: Episode
    showType:
      description: Type of a show.
      enum:
      - movie
      - series
      type: string
      x-enumDescriptions:
        movie: A show that is intended to be watched in a single sitting.
        series: A show that has seasons and episodes.
    changeType:
      description: Type of the change.
      enum:
      - new
      - removed
      - updated
      - expiring
      - upcoming
      type: string
      x-enumDescriptions:
        new: Added recently to the catalog.
        removed: Removed recently from the catalog.
        updated: |
          Recently updated.
          This includes recent additions and removals, plus the streaming options with updated links, subtitles or video qualities etc.
        expiring: Expiring from the catalog soon.
        upcoming: Will be added to the catalog soon.
    error:
      additionalProperties: false
      properties:
        message:
          type: string
      required:
      - message
      title: error
    searchResult:
      additionalProperties: false
      properties:
        shows:
          description: Array of shows.
          items:
            $ref: '#/components/schemas/show'
          type: array
        hasMore:
          description: Whether there are more shows available.
          type: boolean
        nextCursor:
          description: Cursor value to pass to get the next set of shows.
          type: string
      required:
      - hasMore
      - shows
    changesResult:
      additionalProperties: false
      properties:
        changes:
          description: Array of the changes.
          items:
            $ref: '#/components/schemas/change'
          type: array
        shows:
          additionalProperties:
            $ref: '#/components/schemas/show'
          description: Map of the shows by their ids.
        hasMore:
          description: Whether there are more changes available.
          type: boolean
        nextCursor:
          description: Cursor value to pass to get the next set of changes.
          type: string
      required:
      - changes
      - hasMore
      - shows
    showMap:
      additionalProperties:
        $ref: '#/components/schemas/show'
      description: Map of the shows by their ids.
    countryMap:
      additionalProperties:
        $ref: '#/components/schemas/country'
      description: "Map of supported countries by their [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)\
        \ codes"
    orderDirection:
      enum:
      - asc
      - desc
      type: string
      x-enumDescriptions:
        asc: Use ascending order.
        desc: Use descending order.
  securitySchemes:
    X-Rapid-API-Key:
      description: "Rapid API Key can be retrieved from [Rapid API](https://rapidapi.com/movie-of-the-night-movie-of-the-night-default/api/streaming-availability/pricing)."
      in: header
      name: X-RapidAPI-Key
      type: apiKey
