openapi: 3.0.3
info:
  description: "Streaming Availability API allows getting streaming availability information\
    \ of movies and series; and querying the list of available shows on streaming\
    \ services such as Netflix, Disney+, Apple TV, Max and Hulu across 59 countries!"
  license:
    name: MIT
    url: https://spdx.org/licenses/MIT.html
  title: Streaming Availability API
  version: 3.3.0
servers:
- url: https://streaming-availability.p.rapidapi.com
security:
- X-Rapid-API-Key: []
paths:
  /countries:
    get:
      description: |
        Get all the supported countries and the list of the supported services and their details for each country.
        Details of services include names, logos, supported streaming types (subscription, rent, buy, free etc.) and list of available addons/channels.
      operationId: countries
      responses:
        "200":
          content:
            application/json:
              examples:
                Countries:
                  description: Countries
                  externalValue: https://www.movieofthenight.com/openapi/example/countries
              schema:
                $ref: '#/components/schemas/countriesResponseSchema'
          description: Details of the supported countries.
      summary: Countries
  /genres:
    get:
      description: Get the ids and names of the supported genres.
      operationId: genres
      responses:
        "200":
          content:
            application/json:
              examples:
                Genres:
                  description: Genres
                  externalValue: https://www.movieofthenight.com/openapi/example/genres
              schema:
                $ref: '#/components/schemas/genresResponseSchema'
          description: Id to name mapping of the supported genres.
      summary: Genres
  /get:
    get:
      description: "Get the details of a show via IMDb or TMDb id, including the global\
        \ streaming availability info."
      operationId: getById
      parameters:
      - description: IMDb ID of the target show. Either this or "tmdb_id" parameter
          must be supplied.
        examples:
          Titanic:
            description: IMDb ID of the movie Titanic.
            value: tt0120338
          Breaking Bad:
            description: IMDb ID of the series Breaking Bad.
            value: tt0903747
        explode: true
        in: query
        name: imdb_id
        required: false
        schema:
          type: string
        style: form
      - description: TMDb ID of the target show. Either this or "imdb_id" parameter
          must be supplied
        examples:
          Titanic:
            description: TMDb ID of the movie Titanic.
            value: movie/597
          Breaking Bad:
            description: TMDb ID of the series Breaking Bad.
            value: tv/1396
        explode: true
        in: query
        name: tmdb_id
        required: false
        schema:
          type: string
        style: form
      - description: |
          "series_granularity" determines the level of detail for series. It does not affect movies.
          If "series_granularity" is "show", then the output will not include season and episode info.
          If "series_granularity" is "season", then the output will include season info but not episode info.
          If "series_granularity" is "episode", then the output will include season and episode info.
          If you do not need season and episode info, then it is recommended to set "series_granularity" as "show" to reduce the size of the response and increase the performance. Depending on the query (i.e. if the result set includes series with high amount of seasons/episodes), this can reduce the response size and the response time drastically.
          If you need deep links for individual seasons and episodes, then you should set "series_granularity" as "episode". In this case response will include full streaming info for seasons and episodes, similar to the streaming info for movies and series; including deep links into seasons and episodes, individual subtitle/audio and video quality info etc.
          If "series_granularity" is not supplied, then it is set as "episode" by default.
        examples:
          Show:
            description: Do not include season or episode info.
            value: show
          Season:
            description: Include season info but not episode info.
            value: season
          Episode:
            description: Include season and episode info.
            value: episode
        explode: true
        in: query
        name: series_granularity
        required: false
        schema:
          default: episode
          enum:
          - show
          - season
          - episode
          type: string
        style: form
      - description: |
          [ISO 639-1](https://en.wikipedia.org/wiki/ISO_639-1) code of the output language. Determines in which language the output field "title" will be in. It also effects how the keyword input will be handled in search endpoints. (i.e. if "output_language" is "es", then the "keyword" will be treated as a Spanish word).
        examples:
          English:
            description: ISO 639-1 code of English.
            value: en
          Spanish:
            description: ISO 639-1 code of Spanish.
            value: es
        explode: true
        in: query
        name: output_language
        required: false
        schema:
          default: en
          enum:
          - en
          - es
          - tr
          - fr
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                Game of Thrones:
                  description: |
                    "imdb_id=tt0944947" or "tmdb_id=tv/1399"
                  externalValue: https://www.movieofthenight.com/openapi/example/get/game-of-thrones
                The Godfather:
                  description: |
                    "imdb_id=tt0068646" or "tmdb_id=movie/238"
                  externalValue: https://www.movieofthenight.com/openapi/example/get/the-godfather
                The Queen's Gambit:
                  description: |
                    "imdb_id=tt10048342" or "tmdb_id=tv/87739"
                  externalValue: https://www.movieofthenight.com/openapi/example/get/the-queens-gambit
                Palm Springs:
                  description: |
                    "imdb_id=tt9484998" or "tmdb_id=movie/587792"
                  externalValue: https://www.movieofthenight.com/openapi/example/get/palm-springs
              schema:
                $ref: '#/components/schemas/getResponseSchema'
          description: Details of the show.
        "404":
          content:
            application/json:
              examples:
                Not Found:
                  description: The show is not found.
                  value:
                    message: Not Found
              schema:
                $ref: '#/components/schemas/notFoundResponseSchema'
          description: The show is not found.
      summary: Get by Id
  /search/filters:
    get:
      description: |
        Search through the catalog of the given streaming services in the given country. Provides filters such as show language, genre, keyword and release year. Items per page is "25". Can pass up to "16" services in the "services" parameter Output includes all the information about the shows, such as title, IMDb ID, TMDb ID, release year, link to shows' pages in streaming services (including individual season/episode links), available subtitles, audios, available video quality and many more! Apart from the info about the given country-service combinations, output also includes information about streaming availability in the other services for the given country.
      operationId: searchByFilters
      parameters:
      - description: |
          [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) code of the target country. See "/countries" endpoint to get the list of supported countries.
        examples:
          Canada:
            description: ISO 3166-1 alpha-2 code of Canada.
            value: ca
          United States:
            description: ISO 3166-1 alpha-2 code of United States.
            value: us
          Brazil:
            description: ISO 3166-1 alpha-2 code of Brazil.
            value: br
          United Kingdom:
            description: ISO 3166-1 alpha-2 code of United Kingdom.
            value: gb
          Germany:
            description: ISO 3166-1 alpha-2 code of Germany.
            value: de
          South Africa:
            description: ISO 3166-1 alpha-2 code of South Africa.
            value: za
          India:
            description: ISO 3166-1 alpha-2 code of India.
            value: in
          Japan:
            description: ISO 3166-1 alpha-2 code of Japan.
            value: jp
        explode: true
        in: query
        name: country
        required: true
        schema:
          type: string
        style: form
      - description: |
          A comma separated list of up to services to search in. See "/services" endpoint to get the supported services and their ids/names.
          Maximum amount of services allowed depends on the endpoint.
          If a service supports both "free" and "subscription", then results included under "subscription" will always include the "free" shows as well.
          When multiple values are passed as a comma separated list, any show that satisfies at least one of the values will be included in the result.
          Syntax of the values supplied in the list can be as the followings:
          - "<sevice_id>": Searches in the entire catalog of that service, including (if applicable) rentable, buyable shows or shows available through addons i.e. "netflix", "prime", "apple"
          - "<sevice_id>.<streaming_type>": Only returns the shows that are available in that service with the given streaming type. Valid streaming type values are "subscription", "free", "rent", "buy" and "addon" i.e. "peacock.free" only returns the shows on Peacock that are free to watch, "prime.subscription" only returns the shows on Prime Video that are available to watch with a Prime subscription. "hulu.addon" only returns the shows on Hulu that are available via an addon, "prime.rent" only returns the shows on Prime Video that are rentable.
          - "<sevice_id>.addon.<addon_id>": Only returns the shows that are available in that service with the given addon. Check "/services" endpoint to fetch the available addons for a service. Some sample values are: "hulu.addon.hbo", "prime.addon.hbomaxus".
        examples:
          Netflix:
            description: Search in Netflix
            value: netflix
          Amazon Prime Video:
            description: Search in Amazon Prime Video among the shows available via
              a Prime subscription.
            value: prime.subscription
          Buy/Rent:
            description: Search among buyable/rentable shows in Amazon Prime Video
              and Apple TV.
            value: "prime.rent,prime.buy,apple.rent,apple.buy"
          HBO Max and HBO Max Addons:
            description: Search in HBO Max itself and HBO Max channels in Amazon Prime
              Video and Hulu
            value: "hbo,hulu.addon.hbo,prime.addon.hbomaxus"
          Hulu + HBO Max Addon:
            description: Search in Hulu and HBO Max addon in Hulu.
            value: "hulu.subscription,hulu.addon.hbo"
          Apple TV Channels:
            description: Search in all the Apple TV channels
            value: apple.addon
          Free Peacock Shows:
            description: Search in free shows on Peacock.
            value: peacock.free
        explode: true
        in: query
        name: services
        required: true
        schema:
          type: string
        style: form
      - description: |
          [ISO 639-1](https://en.wikipedia.org/wiki/ISO_639-1) code of the output language. Determines in which language the output field "title" will be in. It also effects how the keyword input will be handled in search endpoints. (i.e. if "output_language" is "es", then the "keyword" will be treated as a Spanish word).
        examples:
          English:
            description: ISO 639-1 code of English.
            value: en
          Spanish:
            description: ISO 639-1 code of Spanish.
            value: es
        explode: true
        in: query
        name: output_language
        required: false
        schema:
          default: en
          enum:
          - en
          - es
          - tr
          - fr
          type: string
        style: form
      - description: Type of shows to search in.
        examples:
          Movie:
            description: Search for movies
            value: movie
          Series:
            description: Search for series
            value: series
          All:
            description: Search for both movies and series
            value: all
        explode: true
        in: query
        name: show_type
        required: false
        schema:
          default: all
          enum:
          - movie
          - series
          - all
          type: string
        style: form
      - description: |
          "series_granularity" determines the level of detail for series. It does not affect movies.
          If "series_granularity" is "show", then the output will not include season and episode info.
          If "series_granularity" is "season", then the output will include season info but not episode info.
          If "series_granularity" is "episode", then the output will include season and episode info.
          If you do not need season and episode info, then it is recommended to set "series_granularity" as "show" to reduce the size of the response and increase the performance. Depending on the query (i.e. if the result set includes series with high amount of seasons/episodes), this can reduce the response size and the response time drastically.
          If you need deep links for individual seasons and episodes, then you should set "series_granularity" as "episode". In this case response will include full streaming info for seasons and episodes, similar to the streaming info for movies and series; including deep links into seasons and episodes, individual subtitle/audio and video quality info etc.
          If "series_granularity" is not supplied, then it is set as "episode" by default.
        examples:
          Show:
            description: Do not include season or episode info.
            value: show
          Season:
            description: Include season info but not episode info.
            value: season
          Episode:
            description: Include season and episode info.
            value: episode
        explode: true
        in: query
        name: series_granularity
        required: false
        schema:
          default: episode
          enum:
          - show
          - season
          - episode
          type: string
        style: form
      - description: |
          A comma seperated list of genre ids to only search within the shows in those genre. See "/genres" endpoint to see the available genres and their ids. Use "genres_relation" parameter to specify between returning shows that have at least one of the given genres or returning shows that have all of the given genres.
        examples:
          Romantic Comedy:
            description: Romantic Comedy
            value: "10749,35"
          War Drama:
            description: War Drama
            value: "10752,18"
          Science Fiction:
            description: Science Fiction
            value: 878
        explode: true
        in: query
        name: genres
        required: false
        schema:
          type: string
        style: form
      - description: |
          Only used when there are multiple genres supplied in "genres" parameter.
          When "or", the endpoint returns any show that has at least one of the given genres. When "and", it only returns the shows that have all of the given genres.
        examples:
          And:
            description: Only bring results that include all of the given genres.
            value: and
          Or:
            description: Bring any result that includes at least one of the given
              genres.
            value: or
        explode: true
        in: query
        name: genres_relation
        required: false
        schema:
          default: and
          enum:
          - and
          - or
          type: string
        style: form
      - description: |
          [ISO 639-1](https://en.wikipedia.org/wiki/ISO_639-1) language code to only search within the shows whose original language matches with the provided language.
        examples:
          English:
            description: ISO 639-1 code of English.
            value: en
          Spanish:
            description: ISO 639-1 code of Spanish.
            value: es
        explode: true
        in: query
        name: show_original_language
        required: false
        schema:
          type: string
        style: form
      - description: Minimum release/air year of the shows.
        examples:
          "1980":
            description: Only show results that released/aired after 1980.
            value: 1980.0
          "2020":
            description: Only show results that released/aired after 2020.
            value: 2020.0
        explode: true
        in: query
        name: year_min
        required: false
        schema:
          type: integer
        style: form
      - description: Maximum release/air year of the shows.
        examples:
          "1990":
            description: Only show results that released/aired before 1990.
            value: 1980.0
          "2000":
            description: Only show results that released/aired before 2000.
            value: 2020.0
        explode: true
        in: query
        name: year_max
        required: false
        schema:
          type: integer
        style: form
      - description: A keyword to only search within the shows have that keyword in
          their overview or title.
        examples:
          Zombie:
            description: Search for shows with zombies.
            value: zombie
          Alien:
            description: Search for shows with aliens.
            value: alien
        explode: true
        in: query
        name: keyword
        required: false
        schema:
          type: string
        style: form
      - description: Determines the ordering of the results.
        examples:
          Original Title:
            description: Order alphabetically by original titles.
            value: original_title
          Year:
            description: Order by release/air years.
            value: year
          Popularity Alltime:
            description: |
              Order by all-time popularity in the country. Make sure to set "desc" as "true" so that you will get the most popular shows first.
            value: popularity_alltime
          Popularity 1 Year:
            description: |
              Order by popularity in the last 365 days in the country. Make sure to set "desc" as "true" so that you will get the most popular shows first.
            value: popularity_1year
          Popularity 1 Month:
            description: |
              Order by popularity in the last 31 days in the country. Make sure to set "desc" as "true" so that you will get the most popular shows first.
            value: popularity_1month
          Popularity 1 Week:
            description: |
              Order by popularity in the last 7 days in the country. Make sure to set "desc" as "true" so that you will get the most popular shows first.
            value: popularity_1week
        explode: true
        in: query
        name: order_by
        required: false
        schema:
          default: original_title
          enum:
          - original_title
          - year
          - popularity_alltime
          - popularity_1year
          - popularity_1month
          - popularity_1week
          type: string
        style: form
      - description: The results are ordered in descending order if set true.
        examples:
          "True":
            description: Use descending order.
            value: true
          "False":
            description: Use ascending order.
            value: false
        explode: true
        in: query
        name: desc
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: |
          Cursor is used for pagination. After each request, the response includes a "hasMore" boolean field to tell if there are more results that did not fit into the returned list. If it is set as "true", to get the rest of the result set, send a new request (with the same parameters for other fields such as "services" etc.), and set the "cursor" parameter as the "nextCursor" value of the previous request response. Do not forget to escape the "cursor" value before putting it into a query as it might contain characters such as "?"and "&".
          The first request naturally does not require a "cursor" parameter.
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                Zombie Action Movies on Netflix US:
                  description: |
                    "country=us&services=netflix&show_type=movie&genres=28&keyword=zombie"
                  externalValue: https://www.movieofthenight.com/openapi/example/search/filters/netflix-zombie-action-movies
                All-Time Most Popular Comedy Series on Hulu:
                  description: |
                    "country=us&services=hulu.subscription&show_type=series&genres=35&order_by=popularity_alltime&desc=true"
                  externalValue: https://www.movieofthenight.com/openapi/example/search/filters/hulu-comedy-series
                Recent RomCom Shows on Netflix and Prime Video Canada:
                  description: |
                    "country=ca&services=netflix,prime.subscription&show_type=all&genres=35,10749&genres_relation=and&order_by=year&desc=true"
                  externalValue: https://www.movieofthenight.com/openapi/example/search/filters/netflix-prime-recent-romcom-shows
                Rentable/Buyable Movies from 80s on Apple TV US:
                  description: |
                    "country=us&services=apple.buy,apple.rent&show_type=movie&year_min=1980&year_max=1989"
                  externalValue: https://www.movieofthenight.com/openapi/example/search/filters/apple-rentable-buyable-80s-movies
              schema:
                $ref: '#/components/schemas/searchFiltersResponseSchema'
          description: Response to a search by filters query.
      summary: Search by Filters
  /search/title:
    get:
      description: |
        Search for movies and series by a title. Maximum amount of items returned are "25" unless there are more than 25 shows with the exact given title input. In that case all the items have 100% match with the title will be returned.
        No pagination is supported.
      operationId: searchByTitle
      parameters:
      - description: Title phrase to search for.
        examples:
          Batman:
            description: Search for Batman shows.
            value: Batman
          Harry Potter:
            description: Search for Harry Potter shows.
            value: Harry Potter
        explode: true
        in: query
        name: title
        required: true
        schema:
          type: string
        style: form
      - description: Type of shows to search in.
        examples:
          Movie:
            description: Search for movies
            value: movie
          Series:
            description: Search for series
            value: series
          All:
            description: Search for both movies and series
            value: all
        explode: true
        in: query
        name: show_type
        required: false
        schema:
          default: all
          enum:
          - movie
          - series
          - all
          type: string
        style: form
      - description: |
          [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) code of the target country. See "/countries" endpoint to get the list of supported countries.
        examples:
          Canada:
            description: ISO 3166-1 alpha-2 code of Canada.
            value: ca
          United States:
            description: ISO 3166-1 alpha-2 code of United States.
            value: us
          Brazil:
            description: ISO 3166-1 alpha-2 code of Brazil.
            value: br
          United Kingdom:
            description: ISO 3166-1 alpha-2 code of United Kingdom.
            value: gb
          Germany:
            description: ISO 3166-1 alpha-2 code of Germany.
            value: de
          South Africa:
            description: ISO 3166-1 alpha-2 code of South Africa.
            value: za
          India:
            description: ISO 3166-1 alpha-2 code of India.
            value: in
          Japan:
            description: ISO 3166-1 alpha-2 code of Japan.
            value: jp
        explode: true
        in: query
        name: country
        required: true
        schema:
          type: string
        style: form
      - description: |
          "series_granularity" determines the level of detail for series. It does not affect movies.
          If "series_granularity" is "show", then the output will not include season and episode info.
          If "series_granularity" is "season", then the output will include season info but not episode info.
          If "series_granularity" is "episode", then the output will include season and episode info.
          If you do not need season and episode info, then it is recommended to set "series_granularity" as "show" to reduce the size of the response and increase the performance. Depending on the query (i.e. if the result set includes series with high amount of seasons/episodes), this can reduce the response size and the response time drastically.
          If you need deep links for individual seasons and episodes, then you should set "series_granularity" as "episode". In this case response will include full streaming info for seasons and episodes, similar to the streaming info for movies and series; including deep links into seasons and episodes, individual subtitle/audio and video quality info etc.
          If "series_granularity" is not supplied, then it is set as "episode" by default.
        examples:
          Show:
            description: Do not include season or episode info.
            value: show
          Season:
            description: Include season info but not episode info.
            value: season
          Episode:
            description: Include season and episode info.
            value: episode
        explode: true
        in: query
        name: series_granularity
        required: false
        schema:
          default: episode
          enum:
          - show
          - season
          - episode
          type: string
        style: form
      - description: |
          [ISO 639-1](https://en.wikipedia.org/wiki/ISO_639-1) code of the output language. Determines in which language the output field "title" will be in. It also effects how the keyword input will be handled in search endpoints. (i.e. if "output_language" is "es", then the "keyword" will be treated as a Spanish word).
        examples:
          English:
            description: ISO 639-1 code of English.
            value: en
          Spanish:
            description: ISO 639-1 code of Spanish.
            value: es
        explode: true
        in: query
        name: output_language
        required: false
        schema:
          default: en
          enum:
          - en
          - es
          - tr
          - fr
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                Batman:
                  description: |
                    "title=Batman&country=us"
                  externalValue: https://www.movieofthenight.com/openapi/example/search/title/batman
                Harry Potter Movies:
                  description: |
                    "title=Harry%20Potter&show_type=movie&country=us"
                  externalValue: https://www.movieofthenight.com/openapi/example/search/title/harry-potter
              schema:
                $ref: '#/components/schemas/searchTitleResponseSchema'
          description: Response to a search by title query.
      summary: Search by Title
  /changes:
    get:
      description: |
        Query the new, removed or updated movies/series/seasons/episodes in a given list of streaming services. Results are ordered by the date of the changes. Changes listed per page is "25" when "target_type" is "show", "movie" or "series"; "50" when it is "season"; and "100" when it is "episode".
        Note that changes for the same show are aggregated together into a single "changes" array for that show. Which means there might be cases where the count of the items in the result array might be fewer than the maximum changes listed per page. (i.e. When "target_type" is "season", there might be 10 items in the result array, but the overall total number of changes listed across the "changes" arrays will be still 50, given that there are at least 50 changes matches with the given query.)
      operationId: changes
      parameters:
      - description: |
          [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) code of the target country. See "/countries" endpoint to get the list of supported countries.
        examples:
          Canada:
            description: ISO 3166-1 alpha-2 code of Canada.
            value: ca
          United States:
            description: ISO 3166-1 alpha-2 code of United States.
            value: us
          Brazil:
            description: ISO 3166-1 alpha-2 code of Brazil.
            value: br
          United Kingdom:
            description: ISO 3166-1 alpha-2 code of United Kingdom.
            value: gb
          Germany:
            description: ISO 3166-1 alpha-2 code of Germany.
            value: de
          South Africa:
            description: ISO 3166-1 alpha-2 code of South Africa.
            value: za
          India:
            description: ISO 3166-1 alpha-2 code of India.
            value: in
          Japan:
            description: ISO 3166-1 alpha-2 code of Japan.
            value: jp
        explode: true
        in: query
        name: country
        required: true
        schema:
          type: string
        style: form
      - description: |
          A comma separated list of up to services to search in. See "/services" endpoint to get the supported services and their ids/names.
          Maximum amount of services allowed depends on the endpoint.
          If a service supports both "free" and "subscription", then results included under "subscription" will always include the "free" shows as well.
          When multiple values are passed as a comma separated list, any show that satisfies at least one of the values will be included in the result.
          Syntax of the values supplied in the list can be as the followings:
          - "<sevice_id>": Searches in the entire catalog of that service, including (if applicable) rentable, buyable shows or shows available through addons i.e. "netflix", "prime", "apple"
          - "<sevice_id>.<streaming_type>": Only returns the shows that are available in that service with the given streaming type. Valid streaming type values are "subscription", "free", "rent", "buy" and "addon" i.e. "peacock.free" only returns the shows on Peacock that are free to watch, "prime.subscription" only returns the shows on Prime Video that are available to watch with a Prime subscription. "hulu.addon" only returns the shows on Hulu that are available via an addon, "prime.rent" only returns the shows on Prime Video that are rentable.
          - "<sevice_id>.addon.<addon_id>": Only returns the shows that are available in that service with the given addon. Check "/services" endpoint to fetch the available addons for a service. Some sample values are: "hulu.addon.hbo", "prime.addon.hbomaxus".
        examples:
          Netflix:
            description: Search in Netflix
            value: netflix
          Amazon Prime Video:
            description: Search in Amazon Prime Video among the shows available via
              a Prime subscription.
            value: prime.subscription
          Buy/Rent:
            description: Search among buyable/rentable shows in Amazon Prime Video
              and Apple TV.
            value: "prime.rent,prime.buy,apple.rent,apple.buy"
          HBO Max and HBO Max Addons:
            description: Search in HBO Max itself and HBO Max channels in Amazon Prime
              Video and Hulu
            value: "hbo,hulu.addon.hbo,prime.addon.hbomaxus"
          Hulu + HBO Max Addon:
            description: Search in Hulu and HBO Max addon in Hulu.
            value: "hulu.subscription,hulu.addon.hbo"
          Apple TV Channels:
            description: Search in all the Apple TV channels
            value: apple.addon
          Free Peacock Shows:
            description: Search in free shows on Peacock.
            value: peacock.free
        explode: true
        in: query
        name: services
        required: true
        schema:
          type: string
        style: form
      - description: Type of change to query.
        examples:
          New:
            description: Get all the new items.
            value: new
          Removed:
            description: Get all the removed items.
            value: removed
          Updated:
            description: |
              Get all the updated items. These include new and removed items, plus the items with updated links, subtitles or video qualities.
            value: updated
        explode: true
        in: query
        name: change_type
        required: true
        schema:
          enum:
          - new
          - removed
          - updated
          type: string
        style: form
      - description: Type of items to search in.
        examples:
          Show:
            description: Search for movies and series.
            value: show
          Movie:
            description: Search for movies.
            value: movie
          Series:
            description: Search for series.
            value: series
          Season:
            description: Search for seasons.
            value: season
          Episode:
            description: Search for episodes.
            value: episode
        explode: true
        in: query
        name: target_type
        required: true
        schema:
          enum:
          - show
          - movie
          - series
          - season
          - episode
          type: string
        style: form
      - description: |
          [Unix Time Stamp](https://www.unixtimestamp.com/) to only query the changes since then. Must be within the past "31" days. If not supplied, the changes withing the past "15" days are returned.
        examples:
          "1672531200":
            description: "Unix timestamp of January 1, 2023. Note that this is just\
              \ an example value and you cannot directly use this timestamp as it\
              \ is not within the past \"31\" days."
            value: 1672531200
          "1690070400":
            description: "Unix timestamp of July 23, 2023. Note that this is just\
              \ an example value and you cannot directly use this timestamp as it\
              \ is not within the past \"31\" days."
            value: 1690070400
        explode: true
        in: query
        name: since
        required: false
        schema:
          type: integer
        style: form
      - description: |
          Cursor is used for pagination. After each request, the response includes a "hasMore" boolean field to tell if there are more results that did not fit into the returned list. If it is set as "true", to get the rest of the result set, send a new request (with the same parameters for other fields such as "services" etc.), and set the "cursor" parameter as the "nextCursor" value of the previous request response. Do not forget to escape the "cursor" value before putting it into a query as it might contain characters such as "?"and "&".
          The first request naturally does not require a "cursor" parameter.
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - description: The results are ordered in descending order if set true.
        examples:
          "True":
            description: Use descending order.
            value: true
          "False":
            description: Use ascending order.
            value: false
        explode: true
        in: query
        name: desc
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: |
          [ISO 639-1](https://en.wikipedia.org/wiki/ISO_639-1) code of the output language. Determines in which language the output field "title" will be in. It also effects how the keyword input will be handled in search endpoints. (i.e. if "output_language" is "es", then the "keyword" will be treated as a Spanish word).
        examples:
          English:
            description: ISO 639-1 code of English.
            value: en
          Spanish:
            description: ISO 639-1 code of Spanish.
            value: es
        explode: true
        in: query
        name: output_language
        required: false
        schema:
          default: en
          enum:
          - en
          - es
          - tr
          - fr
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                Updated Netflix US Shows:
                  description: |
                    "country=us&services=netflix&change_type=updated&target_type=show&desc=true"
                  externalValue: https://www.movieofthenight.com/openapi/example/changes/netflix/updated/show
                Movies Removed from Disney+ Germany:
                  description: |
                    "country=de&services=disney&change_type=removed&target_type=movie&desc=true"
                  externalValue: https://www.movieofthenight.com/openapi/example/changes/disney/removed/movie
                New Series Episodes on Max:
                  description: |
                    "country=us&services=hbo&change_type=new&target_type=episode&desc=true"
                  externalValue: https://www.movieofthenight.com/openapi/example/changes/hbo/new/episode
              schema:
                $ref: '#/components/schemas/changesResponseSchema'
          description: Response to a change query.
      summary: Changes
  /leaving:
    get:
      description: |
        Query for the leaving movies/series/seasons/episodes in a given list of streaming services. Results are ordered by the last day to watch. Changes listed per page is "25" when "target_type" is "show", "movie" or "series"; "50" when it is "season"; and "100" when it is "episode".
        Note that upcoming changes for the same show are aggregated together into a single "upcomingChanges" array for that show. Which means there might be cases where the count of the items in the result array might be fewer than the maximum upcoming changes listed per page. (i.e. When "target_type" is "season", there might be 10 items in the result array, but the overall total number of upcoming changes listed across the "upcomingChanges" arrays will be still 50, given that there are at least 50 upcoming changes matches with the given query.)
      operationId: leaving
      parameters:
      - description: |
          [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) code of the target country. See "/countries" endpoint to get the list of supported countries.
        examples:
          Canada:
            description: ISO 3166-1 alpha-2 code of Canada.
            value: ca
          United States:
            description: ISO 3166-1 alpha-2 code of United States.
            value: us
          Brazil:
            description: ISO 3166-1 alpha-2 code of Brazil.
            value: br
          United Kingdom:
            description: ISO 3166-1 alpha-2 code of United Kingdom.
            value: gb
          Germany:
            description: ISO 3166-1 alpha-2 code of Germany.
            value: de
          South Africa:
            description: ISO 3166-1 alpha-2 code of South Africa.
            value: za
          India:
            description: ISO 3166-1 alpha-2 code of India.
            value: in
          Japan:
            description: ISO 3166-1 alpha-2 code of Japan.
            value: jp
        explode: true
        in: query
        name: country
        required: true
        schema:
          type: string
        style: form
      - description: |
          A comma separated list of up to services to search in. See "/services" endpoint to get the supported services and their ids/names.
          Maximum amount of services allowed depends on the endpoint.
          If a service supports both "free" and "subscription", then results included under "subscription" will always include the "free" shows as well.
          When multiple values are passed as a comma separated list, any show that satisfies at least one of the values will be included in the result.
          Syntax of the values supplied in the list can be as the followings:
          - "<sevice_id>": Searches in the entire catalog of that service, including (if applicable) rentable, buyable shows or shows available through addons i.e. "netflix", "prime", "apple"
          - "<sevice_id>.<streaming_type>": Only returns the shows that are available in that service with the given streaming type. Valid streaming type values are "subscription", "free", "rent", "buy" and "addon" i.e. "peacock.free" only returns the shows on Peacock that are free to watch, "prime.subscription" only returns the shows on Prime Video that are available to watch with a Prime subscription. "hulu.addon" only returns the shows on Hulu that are available via an addon, "prime.rent" only returns the shows on Prime Video that are rentable.
          - "<sevice_id>.addon.<addon_id>": Only returns the shows that are available in that service with the given addon. Check "/services" endpoint to fetch the available addons for a service. Some sample values are: "hulu.addon.hbo", "prime.addon.hbomaxus".
        examples:
          Netflix:
            description: Search in Netflix
            value: netflix
          Amazon Prime Video:
            description: Search in Amazon Prime Video among the shows available via
              a Prime subscription.
            value: prime.subscription
          Buy/Rent:
            description: Search among buyable/rentable shows in Amazon Prime Video
              and Apple TV.
            value: "prime.rent,prime.buy,apple.rent,apple.buy"
          HBO Max and HBO Max Addons:
            description: Search in HBO Max itself and HBO Max channels in Amazon Prime
              Video and Hulu
            value: "hbo,hulu.addon.hbo,prime.addon.hbomaxus"
          Hulu + HBO Max Addon:
            description: Search in Hulu and HBO Max addon in Hulu.
            value: "hulu.subscription,hulu.addon.hbo"
          Apple TV Channels:
            description: Search in all the Apple TV channels
            value: apple.addon
          Free Peacock Shows:
            description: Search in free shows on Peacock.
            value: peacock.free
        explode: true
        in: query
        name: services
        required: true
        schema:
          type: string
        style: form
      - description: Type of items to search in.
        examples:
          Show:
            description: Search for movies and series.
            value: show
          Movie:
            description: Search for movies.
            value: movie
          Series:
            description: Search for series.
            value: series
          Season:
            description: Search for seasons.
            value: season
          Episode:
            description: Search for episodes.
            value: episode
        explode: true
        in: query
        name: target_type
        required: true
        schema:
          enum:
          - show
          - movie
          - series
          - season
          - episode
          type: string
        style: form
      - description: |
          Cursor is used for pagination. After each request, the response includes a "hasMore" boolean field to tell if there are more results that did not fit into the returned list. If it is set as "true", to get the rest of the result set, send a new request (with the same parameters for other fields such as "services" etc.), and set the "cursor" parameter as the "nextCursor" value of the previous request response. Do not forget to escape the "cursor" value before putting it into a query as it might contain characters such as "?"and "&".
          The first request naturally does not require a "cursor" parameter.
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - description: |
          [ISO 639-1](https://en.wikipedia.org/wiki/ISO_639-1) code of the output language. Determines in which language the output field "title" will be in. It also effects how the keyword input will be handled in search endpoints. (i.e. if "output_language" is "es", then the "keyword" will be treated as a Spanish word).
        examples:
          English:
            description: ISO 639-1 code of English.
            value: en
          Spanish:
            description: ISO 639-1 code of Spanish.
            value: es
        explode: true
        in: query
        name: output_language
        required: false
        schema:
          default: en
          enum:
          - en
          - es
          - tr
          - fr
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                Shows Leaving Hulu US:
                  description: |
                    "country=us&services=hulu.subscription&target_type=show"
                  externalValue: https://www.movieofthenight.com/openapi/example/leaving/hulu/show
                Movies Leaving Max:
                  description: |
                    "country=us&services=hbo.subscription&target_type=movie"
                  externalValue: https://www.movieofthenight.com/openapi/example/leaving/hbo/movie
                Series Leaving Paramount+ Germany:
                  description: |
                    "country=de&services=paramount&target_type=series"
                  externalValue: https://www.movieofthenight.com/openapi/example/leaving/paramount/series
              schema:
                $ref: '#/components/schemas/upcomingChangesResponseSchema'
          description: Response to a leaving query.
      summary: Leaving
  /services:
    get:
      deprecated: true
      description: |
        Get all the supported streaming services, list of the supported countries for each service and other related details.
        Note: This endpoint is deprecated. Please use the "/countries" endpoint instead.
      operationId: services
      responses:
        "200":
          content:
            application/json:
              examples:
                Services:
                  description: Services
                  externalValue: https://www.movieofthenight.com/openapi/example/services
              schema:
                $ref: '#/components/schemas/servicesResponseSchema'
          description: Details of the supported services.
      summary: Services
components:
  parameters:
    servicesParam:
      description: |
        A comma separated list of up to services to search in. See "/services" endpoint to get the supported services and their ids/names.
        Maximum amount of services allowed depends on the endpoint.
        If a service supports both "free" and "subscription", then results included under "subscription" will always include the "free" shows as well.
        When multiple values are passed as a comma separated list, any show that satisfies at least one of the values will be included in the result.
        Syntax of the values supplied in the list can be as the followings:
        - "<sevice_id>": Searches in the entire catalog of that service, including (if applicable) rentable, buyable shows or shows available through addons i.e. "netflix", "prime", "apple"
        - "<sevice_id>.<streaming_type>": Only returns the shows that are available in that service with the given streaming type. Valid streaming type values are "subscription", "free", "rent", "buy" and "addon" i.e. "peacock.free" only returns the shows on Peacock that are free to watch, "prime.subscription" only returns the shows on Prime Video that are available to watch with a Prime subscription. "hulu.addon" only returns the shows on Hulu that are available via an addon, "prime.rent" only returns the shows on Prime Video that are rentable.
        - "<sevice_id>.addon.<addon_id>": Only returns the shows that are available in that service with the given addon. Check "/services" endpoint to fetch the available addons for a service. Some sample values are: "hulu.addon.hbo", "prime.addon.hbomaxus".
      examples:
        Netflix:
          description: Search in Netflix
          value: netflix
        Amazon Prime Video:
          description: Search in Amazon Prime Video among the shows available via
            a Prime subscription.
          value: prime.subscription
        Buy/Rent:
          description: Search among buyable/rentable shows in Amazon Prime Video and
            Apple TV.
          value: "prime.rent,prime.buy,apple.rent,apple.buy"
        HBO Max and HBO Max Addons:
          description: Search in HBO Max itself and HBO Max channels in Amazon Prime
            Video and Hulu
          value: "hbo,hulu.addon.hbo,prime.addon.hbomaxus"
        Hulu + HBO Max Addon:
          description: Search in Hulu and HBO Max addon in Hulu.
          value: "hulu.subscription,hulu.addon.hbo"
        Apple TV Channels:
          description: Search in all the Apple TV channels
          value: apple.addon
        Free Peacock Shows:
          description: Search in free shows on Peacock.
          value: peacock.free
      explode: true
      in: query
      name: services
      required: true
      schema:
        type: string
      style: form
    changeTypeParam:
      description: Type of change to query.
      examples:
        New:
          description: Get all the new items.
          value: new
        Removed:
          description: Get all the removed items.
          value: removed
        Updated:
          description: |
            Get all the updated items. These include new and removed items, plus the items with updated links, subtitles or video qualities.
          value: updated
      explode: true
      in: query
      name: change_type
      required: true
      schema:
        enum:
        - new
        - removed
        - updated
        type: string
      style: form
    showTypeParam:
      description: Type of shows to search in.
      examples:
        Movie:
          description: Search for movies
          value: movie
        Series:
          description: Search for series
          value: series
        All:
          description: Search for both movies and series
          value: all
      explode: true
      in: query
      name: show_type
      required: false
      schema:
        default: all
        enum:
        - movie
        - series
        - all
        type: string
      style: form
    targetTypeParam:
      description: Type of items to search in.
      examples:
        Show:
          description: Search for movies and series.
          value: show
        Movie:
          description: Search for movies.
          value: movie
        Series:
          description: Search for series.
          value: series
        Season:
          description: Search for seasons.
          value: season
        Episode:
          description: Search for episodes.
          value: episode
      explode: true
      in: query
      name: target_type
      required: true
      schema:
        enum:
        - show
        - movie
        - series
        - season
        - episode
        type: string
      style: form
    genresParam:
      description: |
        A comma seperated list of genre ids to only search within the shows in those genre. See "/genres" endpoint to see the available genres and their ids. Use "genres_relation" parameter to specify between returning shows that have at least one of the given genres or returning shows that have all of the given genres.
      examples:
        Romantic Comedy:
          description: Romantic Comedy
          value: "10749,35"
        War Drama:
          description: War Drama
          value: "10752,18"
        Science Fiction:
          description: Science Fiction
          value: 878
      explode: true
      in: query
      name: genres
      required: false
      schema:
        type: string
      style: form
    genresRelationParam:
      description: |
        Only used when there are multiple genres supplied in "genres" parameter.
        When "or", the endpoint returns any show that has at least one of the given genres. When "and", it only returns the shows that have all of the given genres.
      examples:
        And:
          description: Only bring results that include all of the given genres.
          value: and
        Or:
          description: Bring any result that includes at least one of the given genres.
          value: or
      explode: true
      in: query
      name: genres_relation
      required: false
      schema:
        default: and
        enum:
        - and
        - or
        type: string
      style: form
    sinceParam:
      description: |
        [Unix Time Stamp](https://www.unixtimestamp.com/) to only query the changes since then. Must be within the past "31" days. If not supplied, the changes withing the past "15" days are returned.
      examples:
        "1672531200":
          description: "Unix timestamp of January 1, 2023. Note that this is just\
            \ an example value and you cannot directly use this timestamp as it is\
            \ not within the past \"31\" days."
          value: 1672531200
        "1690070400":
          description: "Unix timestamp of July 23, 2023. Note that this is just an\
            \ example value and you cannot directly use this timestamp as it is not\
            \ within the past \"31\" days."
          value: 1690070400
      explode: true
      in: query
      name: since
      required: false
      schema:
        type: integer
      style: form
    yearMinParam:
      description: Minimum release/air year of the shows.
      examples:
        "1980":
          description: Only show results that released/aired after 1980.
          value: 1980.0
        "2020":
          description: Only show results that released/aired after 2020.
          value: 2020.0
      explode: true
      in: query
      name: year_min
      required: false
      schema:
        type: integer
      style: form
    yearMaxParam:
      description: Maximum release/air year of the shows.
      examples:
        "1990":
          description: Only show results that released/aired before 1990.
          value: 1980.0
        "2000":
          description: Only show results that released/aired before 2000.
          value: 2020.0
      explode: true
      in: query
      name: year_max
      required: false
      schema:
        type: integer
      style: form
    searchFiltersOrderByParam:
      description: Determines the ordering of the results.
      examples:
        Original Title:
          description: Order alphabetically by original titles.
          value: original_title
        Year:
          description: Order by release/air years.
          value: year
        Popularity Alltime:
          description: |
            Order by all-time popularity in the country. Make sure to set "desc" as "true" so that you will get the most popular shows first.
          value: popularity_alltime
        Popularity 1 Year:
          description: |
            Order by popularity in the last 365 days in the country. Make sure to set "desc" as "true" so that you will get the most popular shows first.
          value: popularity_1year
        Popularity 1 Month:
          description: |
            Order by popularity in the last 31 days in the country. Make sure to set "desc" as "true" so that you will get the most popular shows first.
          value: popularity_1month
        Popularity 1 Week:
          description: |
            Order by popularity in the last 7 days in the country. Make sure to set "desc" as "true" so that you will get the most popular shows first.
          value: popularity_1week
      explode: true
      in: query
      name: order_by
      required: false
      schema:
        default: original_title
        enum:
        - original_title
        - year
        - popularity_alltime
        - popularity_1year
        - popularity_1month
        - popularity_1week
        type: string
      style: form
    descParam:
      description: The results are ordered in descending order if set true.
      examples:
        "True":
          description: Use descending order.
          value: true
        "False":
          description: Use ascending order.
          value: false
      explode: true
      in: query
      name: desc
      required: false
      schema:
        default: false
        type: boolean
      style: form
    originalLanguageParam:
      description: |
        [ISO 639-1](https://en.wikipedia.org/wiki/ISO_639-1) language code to only search within the shows whose original language matches with the provided language.
      examples:
        English:
          description: ISO 639-1 code of English.
          value: en
        Spanish:
          description: ISO 639-1 code of Spanish.
          value: es
      explode: true
      in: query
      name: show_original_language
      required: false
      schema:
        type: string
      style: form
    keywordParam:
      description: A keyword to only search within the shows have that keyword in
        their overview or title.
      examples:
        Zombie:
          description: Search for shows with zombies.
          value: zombie
        Alien:
          description: Search for shows with aliens.
          value: alien
      explode: true
      in: query
      name: keyword
      required: false
      schema:
        type: string
      style: form
    titleParam:
      description: Title phrase to search for.
      examples:
        Batman:
          description: Search for Batman shows.
          value: Batman
        Harry Potter:
          description: Search for Harry Potter shows.
          value: Harry Potter
      explode: true
      in: query
      name: title
      required: true
      schema:
        type: string
      style: form
    cursorParam:
      description: |
        Cursor is used for pagination. After each request, the response includes a "hasMore" boolean field to tell if there are more results that did not fit into the returned list. If it is set as "true", to get the rest of the result set, send a new request (with the same parameters for other fields such as "services" etc.), and set the "cursor" parameter as the "nextCursor" value of the previous request response. Do not forget to escape the "cursor" value before putting it into a query as it might contain characters such as "?"and "&".
        The first request naturally does not require a "cursor" parameter.
      explode: true
      in: query
      name: cursor
      required: false
      schema:
        type: string
      style: form
    countryParam:
      description: |
        [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) code of the target country. See "/countries" endpoint to get the list of supported countries.
      examples:
        Canada:
          description: ISO 3166-1 alpha-2 code of Canada.
          value: ca
        United States:
          description: ISO 3166-1 alpha-2 code of United States.
          value: us
        Brazil:
          description: ISO 3166-1 alpha-2 code of Brazil.
          value: br
        United Kingdom:
          description: ISO 3166-1 alpha-2 code of United Kingdom.
          value: gb
        Germany:
          description: ISO 3166-1 alpha-2 code of Germany.
          value: de
        South Africa:
          description: ISO 3166-1 alpha-2 code of South Africa.
          value: za
        India:
          description: ISO 3166-1 alpha-2 code of India.
          value: in
        Japan:
          description: ISO 3166-1 alpha-2 code of Japan.
          value: jp
      explode: true
      in: query
      name: country
      required: true
      schema:
        type: string
      style: form
    imdbIdParam:
      description: IMDb ID of the target show. Either this or "tmdb_id" parameter
        must be supplied.
      examples:
        Titanic:
          description: IMDb ID of the movie Titanic.
          value: tt0120338
        Breaking Bad:
          description: IMDb ID of the series Breaking Bad.
          value: tt0903747
      explode: true
      in: query
      name: imdb_id
      required: false
      schema:
        type: string
      style: form
    tmdbIdParam:
      description: TMDb ID of the target show. Either this or "imdb_id" parameter
        must be supplied
      examples:
        Titanic:
          description: TMDb ID of the movie Titanic.
          value: movie/597
        Breaking Bad:
          description: TMDb ID of the series Breaking Bad.
          value: tv/1396
      explode: true
      in: query
      name: tmdb_id
      required: false
      schema:
        type: string
      style: form
    outputLanguageParam:
      description: |
        [ISO 639-1](https://en.wikipedia.org/wiki/ISO_639-1) code of the output language. Determines in which language the output field "title" will be in. It also effects how the keyword input will be handled in search endpoints. (i.e. if "output_language" is "es", then the "keyword" will be treated as a Spanish word).
      examples:
        English:
          description: ISO 639-1 code of English.
          value: en
        Spanish:
          description: ISO 639-1 code of Spanish.
          value: es
      explode: true
      in: query
      name: output_language
      required: false
      schema:
        default: en
        enum:
        - en
        - es
        - tr
        - fr
        type: string
      style: form
    granularityParam:
      description: |
        "series_granularity" determines the level of detail for series. It does not affect movies.
        If "series_granularity" is "show", then the output will not include season and episode info.
        If "series_granularity" is "season", then the output will include season info but not episode info.
        If "series_granularity" is "episode", then the output will include season and episode info.
        If you do not need season and episode info, then it is recommended to set "series_granularity" as "show" to reduce the size of the response and increase the performance. Depending on the query (i.e. if the result set includes series with high amount of seasons/episodes), this can reduce the response size and the response time drastically.
        If you need deep links for individual seasons and episodes, then you should set "series_granularity" as "episode". In this case response will include full streaming info for seasons and episodes, similar to the streaming info for movies and series; including deep links into seasons and episodes, individual subtitle/audio and video quality info etc.
        If "series_granularity" is not supplied, then it is set as "episode" by default.
      examples:
        Show:
          description: Do not include season or episode info.
          value: show
        Season:
          description: Include season info but not episode info.
          value: season
        Episode:
          description: Include season and episode info.
          value: episode
      explode: true
      in: query
      name: series_granularity
      required: false
      schema:
        default: episode
        enum:
        - show
        - season
        - episode
        type: string
      style: form
  responses:
    countriesResponse:
      content:
        application/json:
          examples:
            Countries:
              description: Countries
              externalValue: https://www.movieofthenight.com/openapi/example/countries
          schema:
            $ref: '#/components/schemas/countriesResponseSchema'
      description: Details of the supported countries.
    servicesResponse:
      content:
        application/json:
          examples:
            Services:
              description: Services
              externalValue: https://www.movieofthenight.com/openapi/example/services
          schema:
            $ref: '#/components/schemas/servicesResponseSchema'
      description: Details of the supported services.
    genresResponse:
      content:
        application/json:
          examples:
            Genres:
              description: Genres
              externalValue: https://www.movieofthenight.com/openapi/example/genres
          schema:
            $ref: '#/components/schemas/genresResponseSchema'
      description: Id to name mapping of the supported genres.
    notFoundResponse:
      content:
        application/json:
          examples:
            Not Found:
              description: The show is not found.
              value:
                message: Not Found
          schema:
            $ref: '#/components/schemas/notFoundResponseSchema'
      description: The show is not found.
    getResponse:
      content:
        application/json:
          examples:
            Game of Thrones:
              description: |
                "imdb_id=tt0944947" or "tmdb_id=tv/1399"
              externalValue: https://www.movieofthenight.com/openapi/example/get/game-of-thrones
            The Godfather:
              description: |
                "imdb_id=tt0068646" or "tmdb_id=movie/238"
              externalValue: https://www.movieofthenight.com/openapi/example/get/the-godfather
            The Queen's Gambit:
              description: |
                "imdb_id=tt10048342" or "tmdb_id=tv/87739"
              externalValue: https://www.movieofthenight.com/openapi/example/get/the-queens-gambit
            Palm Springs:
              description: |
                "imdb_id=tt9484998" or "tmdb_id=movie/587792"
              externalValue: https://www.movieofthenight.com/openapi/example/get/palm-springs
          schema:
            $ref: '#/components/schemas/getResponseSchema'
      description: Details of the show.
    searchFiltersResponse:
      content:
        application/json:
          examples:
            Zombie Action Movies on Netflix US:
              description: |
                "country=us&services=netflix&show_type=movie&genres=28&keyword=zombie"
              externalValue: https://www.movieofthenight.com/openapi/example/search/filters/netflix-zombie-action-movies
            All-Time Most Popular Comedy Series on Hulu:
              description: |
                "country=us&services=hulu.subscription&show_type=series&genres=35&order_by=popularity_alltime&desc=true"
              externalValue: https://www.movieofthenight.com/openapi/example/search/filters/hulu-comedy-series
            Recent RomCom Shows on Netflix and Prime Video Canada:
              description: |
                "country=ca&services=netflix,prime.subscription&show_type=all&genres=35,10749&genres_relation=and&order_by=year&desc=true"
              externalValue: https://www.movieofthenight.com/openapi/example/search/filters/netflix-prime-recent-romcom-shows
            Rentable/Buyable Movies from 80s on Apple TV US:
              description: |
                "country=us&services=apple.buy,apple.rent&show_type=movie&year_min=1980&year_max=1989"
              externalValue: https://www.movieofthenight.com/openapi/example/search/filters/apple-rentable-buyable-80s-movies
          schema:
            $ref: '#/components/schemas/searchFiltersResponseSchema'
      description: Response to a search by filters query.
    searchTitleResponse:
      content:
        application/json:
          examples:
            Batman:
              description: |
                "title=Batman&country=us"
              externalValue: https://www.movieofthenight.com/openapi/example/search/title/batman
            Harry Potter Movies:
              description: |
                "title=Harry%20Potter&show_type=movie&country=us"
              externalValue: https://www.movieofthenight.com/openapi/example/search/title/harry-potter
          schema:
            $ref: '#/components/schemas/searchTitleResponseSchema'
      description: Response to a search by title query.
    changesResponse:
      content:
        application/json:
          examples:
            Updated Netflix US Shows:
              description: |
                "country=us&services=netflix&change_type=updated&target_type=show&desc=true"
              externalValue: https://www.movieofthenight.com/openapi/example/changes/netflix/updated/show
            Movies Removed from Disney+ Germany:
              description: |
                "country=de&services=disney&change_type=removed&target_type=movie&desc=true"
              externalValue: https://www.movieofthenight.com/openapi/example/changes/disney/removed/movie
            New Series Episodes on Max:
              description: |
                "country=us&services=hbo&change_type=new&target_type=episode&desc=true"
              externalValue: https://www.movieofthenight.com/openapi/example/changes/hbo/new/episode
          schema:
            $ref: '#/components/schemas/changesResponseSchema'
      description: Response to a change query.
    leavingResponse:
      content:
        application/json:
          examples:
            Shows Leaving Hulu US:
              description: |
                "country=us&services=hulu.subscription&target_type=show"
              externalValue: https://www.movieofthenight.com/openapi/example/leaving/hulu/show
            Movies Leaving Max:
              description: |
                "country=us&services=hbo.subscription&target_type=movie"
              externalValue: https://www.movieofthenight.com/openapi/example/leaving/hbo/movie
            Series Leaving Paramount+ Germany:
              description: |
                "country=de&services=paramount&target_type=series"
              externalValue: https://www.movieofthenight.com/openapi/example/leaving/paramount/series
          schema:
            $ref: '#/components/schemas/upcomingChangesResponseSchema'
      description: Response to a leaving query.
  schemas:
    addon:
      additionalProperties: false
      description: Details of an addon.
      example:
        themeColorCode: themeColorCode
        image: image
        images:
          whiteImage: whiteImage
          darkThemeImage: darkThemeImage
          lightThemeImage: lightThemeImage
        displayName: displayName
        id: id
        homePage: homePage
      properties:
        id:
          description: Id of the addon.
          type: string
        displayName:
          description: Name of the addon.
          type: string
        homePage:
          description: Link to the homepage of the addon.
          type: string
        themeColorCode:
          description: Associated theme color hex code of the addon.
          type: string
        image:
          deprecated: true
          description: "Link to the logo of the addon. Deprecated, use \"images\"\
            \ instead."
          type: string
        images:
          $ref: '#/components/schemas/imageSet'
      required:
      - displayName
      - homePage
      - id
      - image
      - themeColorCode
      type: object
      x-additionalPropertiesName: addon
    supportedStreamingTypes:
      additionalProperties: false
      description: Details about the supported streaming types for a service-country
        combo.
      example:
        addon: true
        buy: true
        subscription: true
        rent: true
        free: true
      properties:
        addon:
          description: Whether there are addons/channels available.
          type: boolean
        buy:
          description: Whether buying shows is supported.
          type: boolean
        rent:
          description: Whether renting shows is supported.
          type: boolean
        free:
          description: Whether there are free shows available.
          type: boolean
        subscription:
          description: Whether signing up for a subscription plan is available.
          type: boolean
      required:
      - addon
      - buy
      - free
      - rent
      - subscription
      type: object
    imageSet:
      additionalProperties: false
      description: Image set of a service or an addon.
      example:
        whiteImage: whiteImage
        darkThemeImage: darkThemeImage
        lightThemeImage: lightThemeImage
      properties:
        lightThemeImage:
          description: Link to the logo suitable for light themed background.
          type: string
        darkThemeImage:
          description: Link to the logo suitable for dark themed background.
          type: string
        whiteImage:
          description: Link to the logo that is all white.
          type: string
      required:
      - darkThemeImage
      - lightThemeImage
      - whiteImage
      type: object
    addonsMap:
      additionalProperties:
        $ref: '#/components/schemas/addon'
      description: Map of id to details of the addons supported by the service in
        this country.
      type: object
    service:
      additionalProperties: false
      description: Details of a service.
      example:
        themeColorCode: themeColorCode
        images:
          whiteImage: whiteImage
          darkThemeImage: darkThemeImage
          lightThemeImage: lightThemeImage
        addons:
          key:
            themeColorCode: themeColorCode
            image: image
            images:
              whiteImage: whiteImage
              darkThemeImage: darkThemeImage
              lightThemeImage: lightThemeImage
            displayName: displayName
            id: id
            homePage: homePage
        name: name
        id: id
        homePage: homePage
        supportedStreamingTypes:
          addon: true
          buy: true
          subscription: true
          rent: true
          free: true
      properties:
        id:
          description: Id of the service.
          type: string
        name:
          description: Name of the service.
          type: string
        homePage:
          description: Link to the homepage of the service.
          type: string
        themeColorCode:
          description: Associated theme color hex code of the service.
          type: string
        images:
          $ref: '#/components/schemas/imageSet'
        supportedStreamingTypes:
          $ref: '#/components/schemas/supportedStreamingTypes'
        addons:
          additionalProperties:
            $ref: '#/components/schemas/addon'
          description: Map of id to details of the addons supported by the service
            in this country.
          type: object
      required:
      - addons
      - homePage
      - id
      - images
      - name
      - supportedStreamingTypes
      - themeColorCode
      type: object
      x-additionalPropertiesName: country
    serviceCountryInfo:
      additionalProperties: false
      description: Details of a service in a country.
      example:
        addons:
          key:
            themeColorCode: themeColorCode
            image: image
            images:
              whiteImage: whiteImage
              darkThemeImage: darkThemeImage
              lightThemeImage: lightThemeImage
            displayName: displayName
            id: id
            homePage: homePage
        supportedStreamingTypes:
          addon: true
          buy: true
          subscription: true
          rent: true
          free: true
      properties:
        supportedStreamingTypes:
          $ref: '#/components/schemas/supportedStreamingTypes'
        addons:
          additionalProperties:
            $ref: '#/components/schemas/addon'
          description: Map of id to details of the addons supported by the service
            in this country.
          type: object
      required:
      - addons
      - supportedStreamingTypes
      type: object
      x-additionalPropertiesName: country
    deprecatedServiceInfo:
      additionalProperties: false
      description: Details of a service.
      example:
        id: id
        countries:
          key:
            addons:
              key:
                themeColorCode: themeColorCode
                image: image
                images:
                  whiteImage: whiteImage
                  darkThemeImage: darkThemeImage
                  lightThemeImage: lightThemeImage
                displayName: displayName
                id: id
                homePage: homePage
            supportedStreamingTypes:
              addon: true
              buy: true
              subscription: true
              rent: true
              free: true
      properties:
        id:
          description: Id of the service.
          type: string
        countries:
          additionalProperties:
            $ref: '#/components/schemas/serviceCountryInfo'
          description: Map of 2-letter country ISO code to details of the service
            in that country.
          type: object
      required:
      - countries
      - id
      type: object
    country:
      additionalProperties: false
      description: Details of a country.
      example:
        countryCode: countryCode
        name: name
        services:
          key:
            themeColorCode: themeColorCode
            images:
              whiteImage: whiteImage
              darkThemeImage: darkThemeImage
              lightThemeImage: lightThemeImage
            addons:
              key:
                themeColorCode: themeColorCode
                image: image
                images:
                  whiteImage: whiteImage
                  darkThemeImage: darkThemeImage
                  lightThemeImage: lightThemeImage
                displayName: displayName
                id: id
                homePage: homePage
            name: name
            id: id
            homePage: homePage
            supportedStreamingTypes:
              addon: true
              buy: true
              subscription: true
              rent: true
              free: true
      properties:
        countryCode:
          description: 2-letter ISO code of the country.
          type: string
        name:
          description: Name of the country.
          type: string
        services:
          additionalProperties:
            $ref: '#/components/schemas/service'
          description: Map of service id to details of the service in this country.
          type: object
      required:
      - countryCode
      - name
      - services
      type: object
    imdbId:
      description: "[IMDb](https://www.imdb.com/) ID of the show."
      type: string
    tmdbId:
      description: "[TMDb](https://www.themoviedb.org/) ID of the show."
      type: integer
    show:
      additionalProperties: false
      description: Details of a show.
      example:
        seasons:
        - firstAirYear: 3
          lastAirYear: 2
          streamingInfo:
            key: null
          type: season
          title: title
          episodes:
          - year: 4
            streamingInfo:
              key: null
            type: episode
            title: title
          - year: 4
            streamingInfo:
              key: null
            type: episode
            title: title
        - firstAirYear: 3
          lastAirYear: 2
          streamingInfo:
            key: null
          type: season
          title: title
          episodes:
          - year: 4
            streamingInfo:
              key: null
            type: episode
            title: title
          - year: 4
            streamingInfo:
              key: null
            type: episode
            title: title
        year: 0
        episodeCount: 9
        imdbId: imdbId
        creators:
        - creators
        - creators
        directors:
        - directors
        - directors
        type: movie
        title: title
        tmdbId: 5
        seasonCount: 7
        firstAirYear: 6
        lastAirYear: 1
        originalTitle: originalTitle
        genres:
        - name: name
          id: 5
        - name: name
          id: 5
        streamingInfo:
          key: null
        status:
          statusText: Returning Series
          statusCode: 2
      properties:
        type:
          description: Type of the show.
          enum:
          - movie
          - series
          type: string
        title:
          description: Title of the show.
          type: string
        year:
          description: The year that the movie was released.
          type: integer
        firstAirYear:
          description: The first year that the series aired.
          type: integer
        lastAirYear:
          description: The last year that the series aired.
          type: integer
        imdbId:
          description: "[IMDb](https://www.imdb.com/) ID of the show."
          type: string
        tmdbId:
          description: "[TMDb](https://www.themoviedb.org/) ID of the show."
          type: integer
        originalTitle:
          description: Original title of the show.
          type: string
        genres:
          description: Array of the genres associated with the show.
          items:
            $ref: '#/components/schemas/genre'
          type: array
        directors:
          description: Array of the directors of the movie.
          items:
            type: string
          type: array
        creators:
          description: Array of the creators of the series.
          items:
            type: string
          type: array
        status:
          $ref: '#/components/schemas/seriesStatus'
        seasonCount:
          description: Number of seasons that are either available or announced.
          type: integer
        episodeCount:
          description: Number of episodes that are either available or announced.
          type: integer
        streamingInfo:
          additionalProperties:
            $ref: '#/components/schemas/streamingInfoInCountry'
          description: Country to streaming availability info mapping of a show.
          type: object
        seasons:
          items:
            $ref: '#/components/schemas/season'
          type: array
      required:
      - genres
      - imdbId
      - originalTitle
      - streamingInfo
      - title
      - tmdbId
      - type
      type: object
    season:
      description: Details of a season.
      example:
        firstAirYear: 3
        lastAirYear: 2
        streamingInfo:
          key: null
        type: season
        title: title
        episodes:
        - year: 4
          streamingInfo:
            key: null
          type: episode
          title: title
        - year: 4
          streamingInfo:
            key: null
          type: episode
          title: title
      properties:
        type:
          description: Type of the item. Always "season".
          enum:
          - season
          type: string
        title:
          description: Title of the season.
          type: string
        firstAirYear:
          description: The first year that the season aired.
          type: integer
        lastAirYear:
          description: The last year that the season aired.
          type: integer
        streamingInfo:
          additionalProperties:
            $ref: '#/components/schemas/streamingInfoInCountry'
          description: Country to streaming availability info mapping of a show.
          type: object
        episodes:
          description: Array of the episodes belong to the season.
          items:
            $ref: '#/components/schemas/episode'
          type: array
      required:
      - episodes
      - firstAirYear
      - lastAirYear
      - streamingInfo
      - title
      - type
    episode:
      description: Details of an episode.
      example:
        year: 4
        streamingInfo:
          key: null
        type: episode
        title: title
      properties:
        type:
          description: Type of the item. Always "episode".
          enum:
          - episode
          type: string
        title:
          description: Title of the episode.
          type: string
        year:
          description: The year that the movie was released.
          type: integer
        streamingInfo:
          additionalProperties:
            $ref: '#/components/schemas/streamingInfoInCountry'
          description: Country to streaming availability info mapping of a show.
          type: object
      required:
      - streamingInfo
      - title
      - type
      - year
      type: object
    seriesStatus:
      description: The current status of a series.
      example:
        statusText: Returning Series
        statusCode: 2
      properties:
        statusCode:
          description: |
            Integer code of the status. 1: "Returning Series", 2: "Planned", 3: "In Production", 4: "Ended", 5: "Cancelled", 6: "Pilot",
          maximum: 6
          minimum: 1
          type: integer
        statusText:
          description: Textual representation of the status.
          enum:
          - Returning Series
          - Planned
          - In Production
          - Ended
          - Cancelled
          - Pilot
          type: string
      required:
      - statusCode
      - statusText
      type: object
    streamingInfo:
      additionalProperties:
        $ref: '#/components/schemas/streamingInfoInCountry'
      description: Country to streaming availability info mapping of a show.
      type: object
    streamingInfoInCountry:
      description: Array of streaming options in a country.
      items:
        $ref: '#/components/schemas/streamingOption'
      type: array
    streamingType:
      description: Type of the streaming option.
      enum:
      - free
      - subscription
      - buy
      - rent
      - addon
      type: string
    streamingOption:
      additionalProperties: false
      description: A streaming option.
      properties:
        service:
          description: Id of the streaming service.
          type: string
        streamingType:
          $ref: '#/components/schemas/streamingType'
        addon:
          description: "Addon id, if the \"streamingType\" is \"addon\". Otherwise\
            \ omitted."
          type: string
        link:
          description: Deep link to the streaming option's page in the streaming service.
            Guaranteed to be populated.
          type: string
        videoLink:
          description: |
            Deep link to the video associated with the streaming option. Omitted if there's no direct link to the video. Might have the same value as "link".
          type: string
        quality:
          description: Maximum video quality of the streaming option. Omitted if the
            quality is unknown.
          enum:
          - sd
          - hd
          - qhd
          - uhd
          type: string
        audios:
          description: Array of the available audios.
          items:
            $ref: '#/components/schemas/locale'
          type: array
        subtitles:
          description: Array of the available subtitles.
          items:
            $ref: '#/components/schemas/subtitle'
          type: array
        price:
          $ref: '#/components/schemas/price'
        leaving:
          description: |
            [Unix Time Stamp](https://www.unixtimestamp.com/) of the date that this streaming option is expiring. In other words, last day to watch. A value of 1 means the streaming option is expiring soon, but there's no specific date info is found. Omitted if there's no known expiry date.
          format: int64
          type: integer
        availableSince:
          description: |
            [Unix Time Stamp](https://www.unixtimestamp.com/) of the date that this streaming option was found on the service.
          format: int64
          type: integer
      required:
      - audios
      - availableSince
      - link
      - service
      - streamingType
      - subtitles
      - type
      type: object
    price:
      additionalProperties: false
      description: Price of the renting or buying.
      properties:
        amount:
          description: Numerical amount of the price.
          type: string
        currency:
          description: ISO 4217 alphabetic code of the currency.
          type: string
        formatted:
          description: "Formatted price, including both the amount and the currency."
          type: string
      required:
      - amount
      - currency
      - formatted
      type: object
    subtitle:
      properties:
        closedCaptions:
          description: Whether closed captions are available for the subtitle.
          type: boolean
        locale:
          $ref: '#/components/schemas/locale'
      type: object
    locale:
      description: A language and optionally an associated region.
      properties:
        language:
          description: "[ISO 639-2](https://en.wikipedia.org/wiki/ISO_639-2) code\
            \ of the associated language with the locale."
          type: string
        region:
          description: |
            [ISO 3166-1 alpha-3](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3) code of the country, or [UN M49](https://en.wikipedia.org/wiki/UN_M49) code of the area associated language with the locale, or an empty string if no region info is available.
          type: string
      required:
      - language
      - region
      type: object
    genre:
      description: Details of a genre
      example:
        name: name
        id: 5
      properties:
        id:
          description: Id of the genre
          type: integer
        name:
          description: Name of the genre
          type: string
      required:
      - id
      - name
      type: object
    servicesResult:
      additionalProperties:
        $ref: '#/components/schemas/deprecatedServiceInfo'
      description: Map of service id to service details.
      type: object
    countriesResult:
      additionalProperties:
        $ref: '#/components/schemas/country'
      description: Map of country code to country details.
      type: object
    servicesResponseSchema:
      additionalProperties: false
      example:
        result:
          key:
            id: id
            countries:
              key:
                addons:
                  key:
                    themeColorCode: themeColorCode
                    image: image
                    images:
                      whiteImage: whiteImage
                      darkThemeImage: darkThemeImage
                      lightThemeImage: lightThemeImage
                    displayName: displayName
                    id: id
                    homePage: homePage
                supportedStreamingTypes:
                  addon: true
                  buy: true
                  subscription: true
                  rent: true
                  free: true
      properties:
        result:
          additionalProperties:
            $ref: '#/components/schemas/deprecatedServiceInfo'
          description: Map of service id to service details.
          type: object
      required:
      - result
      type: object
    countriesResponseSchema:
      additionalProperties: false
      example:
        result:
          key:
            countryCode: countryCode
            name: name
            services:
              key:
                themeColorCode: themeColorCode
                images:
                  whiteImage: whiteImage
                  darkThemeImage: darkThemeImage
                  lightThemeImage: lightThemeImage
                addons:
                  key:
                    themeColorCode: themeColorCode
                    image: image
                    images:
                      whiteImage: whiteImage
                      darkThemeImage: darkThemeImage
                      lightThemeImage: lightThemeImage
                    displayName: displayName
                    id: id
                    homePage: homePage
                name: name
                id: id
                homePage: homePage
                supportedStreamingTypes:
                  addon: true
                  buy: true
                  subscription: true
                  rent: true
                  free: true
      properties:
        result:
          additionalProperties:
            $ref: '#/components/schemas/country'
          description: Map of country code to country details.
          type: object
      required:
      - result
      type: object
    genresResponseSchema:
      additionalProperties: false
      example:
        result:
          key: result
      properties:
        result:
          additionalProperties:
            type: string
            x-additionalPropertiesName: genreId
          description: Map of genre id to genre name.
          type: object
      required:
      - result
      type: object
    change:
      description: A past or upcoming change in a catalog.
      example:
        addon: addon
        service: service
        season: 0
        episode: 6
        time: 1
        streamingType: null
      properties:
        season:
          description: Season number. Omitted if "target_type" is not "season"or "episode".
          type: integer
        episode:
          description: Episode number. Omitted if "target_type" is not "episode".
          type: integer
        service:
          description: Service id of the change.
          type: string
        streamingType:
          $ref: '#/components/schemas/streamingType'
        addon:
          description: "Addon id, if the \"streamingType\" is \"addon\". Otherwise\
            \ omitted."
          type: string
        time:
          description: |
            [Unix Time Stamp](https://www.unixtimestamp.com/) of the change.
          type: integer
      required:
      - service
      - streamingType
      - time
      type: object
    upcomingChangeSet:
      additionalProperties: false
      example:
        upcomingChanges:
        - addon: addon
          service: service
          season: 0
          episode: 6
          time: 1
          streamingType: null
        - addon: addon
          service: service
          season: 0
          episode: 6
          time: 1
          streamingType: null
        show:
          seasons:
          - firstAirYear: 3
            lastAirYear: 2
            streamingInfo:
              key: null
            type: season
            title: title
            episodes:
            - year: 4
              streamingInfo:
                key: null
              type: episode
              title: title
            - year: 4
              streamingInfo:
                key: null
              type: episode
              title: title
          - firstAirYear: 3
            lastAirYear: 2
            streamingInfo:
              key: null
            type: season
            title: title
            episodes:
            - year: 4
              streamingInfo:
                key: null
              type: episode
              title: title
            - year: 4
              streamingInfo:
                key: null
              type: episode
              title: title
          year: 0
          episodeCount: 9
          imdbId: imdbId
          creators:
          - creators
          - creators
          directors:
          - directors
          - directors
          type: movie
          title: title
          tmdbId: 5
          seasonCount: 7
          firstAirYear: 6
          lastAirYear: 1
          originalTitle: originalTitle
          genres:
          - name: name
            id: 5
          - name: name
            id: 5
          streamingInfo:
            key: null
          status:
            statusText: Returning Series
            statusCode: 2
      properties:
        upcomingChanges:
          items:
            $ref: '#/components/schemas/change'
          type: array
        show:
          $ref: '#/components/schemas/show'
      required:
      - show
      - upcomingChanges
      type: object
    changeSet:
      additionalProperties: false
      example:
        changes:
        - addon: addon
          service: service
          season: 0
          episode: 6
          time: 1
          streamingType: null
        - addon: addon
          service: service
          season: 0
          episode: 6
          time: 1
          streamingType: null
        show:
          seasons:
          - firstAirYear: 3
            lastAirYear: 2
            streamingInfo:
              key: null
            type: season
            title: title
            episodes:
            - year: 4
              streamingInfo:
                key: null
              type: episode
              title: title
            - year: 4
              streamingInfo:
                key: null
              type: episode
              title: title
          - firstAirYear: 3
            lastAirYear: 2
            streamingInfo:
              key: null
            type: season
            title: title
            episodes:
            - year: 4
              streamingInfo:
                key: null
              type: episode
              title: title
            - year: 4
              streamingInfo:
                key: null
              type: episode
              title: title
          year: 0
          episodeCount: 9
          imdbId: imdbId
          creators:
          - creators
          - creators
          directors:
          - directors
          - directors
          type: movie
          title: title
          tmdbId: 5
          seasonCount: 7
          firstAirYear: 6
          lastAirYear: 1
          originalTitle: originalTitle
          genres:
          - name: name
            id: 5
          - name: name
            id: 5
          streamingInfo:
            key: null
          status:
            statusText: Returning Series
            statusCode: 2
      properties:
        changes:
          items:
            $ref: '#/components/schemas/change'
          type: array
        show:
          $ref: '#/components/schemas/show'
      required:
      - changes
      - show
      type: object
    upcomingChangesResponseSchema:
      additionalProperties: false
      example:
        result:
        - upcomingChanges:
          - addon: addon
            service: service
            season: 0
            episode: 6
            time: 1
            streamingType: null
          - addon: addon
            service: service
            season: 0
            episode: 6
            time: 1
            streamingType: null
          show:
            seasons:
            - firstAirYear: 3
              lastAirYear: 2
              streamingInfo:
                key: null
              type: season
              title: title
              episodes:
              - year: 4
                streamingInfo:
                  key: null
                type: episode
                title: title
              - year: 4
                streamingInfo:
                  key: null
                type: episode
                title: title
            - firstAirYear: 3
              lastAirYear: 2
              streamingInfo:
                key: null
              type: season
              title: title
              episodes:
              - year: 4
                streamingInfo:
                  key: null
                type: episode
                title: title
              - year: 4
                streamingInfo:
                  key: null
                type: episode
                title: title
            year: 0
            episodeCount: 9
            imdbId: imdbId
            creators:
            - creators
            - creators
            directors:
            - directors
            - directors
            type: movie
            title: title
            tmdbId: 5
            seasonCount: 7
            firstAirYear: 6
            lastAirYear: 1
            originalTitle: originalTitle
            genres:
            - name: name
              id: 5
            - name: name
              id: 5
            streamingInfo:
              key: null
            status:
              statusText: Returning Series
              statusCode: 2
        - upcomingChanges:
          - addon: addon
            service: service
            season: 0
            episode: 6
            time: 1
            streamingType: null
          - addon: addon
            service: service
            season: 0
            episode: 6
            time: 1
            streamingType: null
          show:
            seasons:
            - firstAirYear: 3
              lastAirYear: 2
              streamingInfo:
                key: null
              type: season
              title: title
              episodes:
              - year: 4
                streamingInfo:
                  key: null
                type: episode
                title: title
              - year: 4
                streamingInfo:
                  key: null
                type: episode
                title: title
            - firstAirYear: 3
              lastAirYear: 2
              streamingInfo:
                key: null
              type: season
              title: title
              episodes:
              - year: 4
                streamingInfo:
                  key: null
                type: episode
                title: title
              - year: 4
                streamingInfo:
                  key: null
                type: episode
                title: title
            year: 0
            episodeCount: 9
            imdbId: imdbId
            creators:
            - creators
            - creators
            directors:
            - directors
            - directors
            type: movie
            title: title
            tmdbId: 5
            seasonCount: 7
            firstAirYear: 6
            lastAirYear: 1
            originalTitle: originalTitle
            genres:
            - name: name
              id: 5
            - name: name
              id: 5
            streamingInfo:
              key: null
            status:
              statusText: Returning Series
              statusCode: 2
        nextCursor: nextCursor
        hasMore: true
      properties:
        result:
          description: Array of the results matched with the query.
          items:
            $ref: '#/components/schemas/upcomingChangeSet'
          type: array
        hasMore:
          description: Whether there are more results to be loaded.
          type: boolean
        nextCursor:
          description: Cursor value to pass to get next set of the results. An empty
            string if "hasMore" is "false".
          type: string
      required:
      - hasMore
      - nextCursor
      - result
      type: object
    changesResponseSchema:
      additionalProperties: false
      example:
        result:
        - changes:
          - addon: addon
            service: service
            season: 0
            episode: 6
            time: 1
            streamingType: null
          - addon: addon
            service: service
            season: 0
            episode: 6
            time: 1
            streamingType: null
          show:
            seasons:
            - firstAirYear: 3
              lastAirYear: 2
              streamingInfo:
                key: null
              type: season
              title: title
              episodes:
              - year: 4
                streamingInfo:
                  key: null
                type: episode
                title: title
              - year: 4
                streamingInfo:
                  key: null
                type: episode
                title: title
            - firstAirYear: 3
              lastAirYear: 2
              streamingInfo:
                key: null
              type: season
              title: title
              episodes:
              - year: 4
                streamingInfo:
                  key: null
                type: episode
                title: title
              - year: 4
                streamingInfo:
                  key: null
                type: episode
                title: title
            year: 0
            episodeCount: 9
            imdbId: imdbId
            creators:
            - creators
            - creators
            directors:
            - directors
            - directors
            type: movie
            title: title
            tmdbId: 5
            seasonCount: 7
            firstAirYear: 6
            lastAirYear: 1
            originalTitle: originalTitle
            genres:
            - name: name
              id: 5
            - name: name
              id: 5
            streamingInfo:
              key: null
            status:
              statusText: Returning Series
              statusCode: 2
        - changes:
          - addon: addon
            service: service
            season: 0
            episode: 6
            time: 1
            streamingType: null
          - addon: addon
            service: service
            season: 0
            episode: 6
            time: 1
            streamingType: null
          show:
            seasons:
            - firstAirYear: 3
              lastAirYear: 2
              streamingInfo:
                key: null
              type: season
              title: title
              episodes:
              - year: 4
                streamingInfo:
                  key: null
                type: episode
                title: title
              - year: 4
                streamingInfo:
                  key: null
                type: episode
                title: title
            - firstAirYear: 3
              lastAirYear: 2
              streamingInfo:
                key: null
              type: season
              title: title
              episodes:
              - year: 4
                streamingInfo:
                  key: null
                type: episode
                title: title
              - year: 4
                streamingInfo:
                  key: null
                type: episode
                title: title
            year: 0
            episodeCount: 9
            imdbId: imdbId
            creators:
            - creators
            - creators
            directors:
            - directors
            - directors
            type: movie
            title: title
            tmdbId: 5
            seasonCount: 7
            firstAirYear: 6
            lastAirYear: 1
            originalTitle: originalTitle
            genres:
            - name: name
              id: 5
            - name: name
              id: 5
            streamingInfo:
              key: null
            status:
              statusText: Returning Series
              statusCode: 2
        nextCursor: nextCursor
        hasMore: true
      properties:
        result:
          description: Array of the results matched with the query.
          items:
            $ref: '#/components/schemas/changeSet'
          type: array
        hasMore:
          description: Whether there are more results to be loaded.
          type: boolean
        nextCursor:
          description: Cursor value to pass to get next set of the results. An empty
            string if "hasMore" is "false".
          type: string
      required:
      - hasMore
      - nextCursor
      - result
      type: object
    notFoundResponseSchema:
      additionalProperties: false
      properties:
        message:
          type: string
      required:
      - message
      type: object
    getResponseSchema:
      additionalProperties: false
      example:
        result:
          seasons:
          - firstAirYear: 3
            lastAirYear: 2
            streamingInfo:
              key: null
            type: season
            title: title
            episodes:
            - year: 4
              streamingInfo:
                key: null
              type: episode
              title: title
            - year: 4
              streamingInfo:
                key: null
              type: episode
              title: title
          - firstAirYear: 3
            lastAirYear: 2
            streamingInfo:
              key: null
            type: season
            title: title
            episodes:
            - year: 4
              streamingInfo:
                key: null
              type: episode
              title: title
            - year: 4
              streamingInfo:
                key: null
              type: episode
              title: title
          year: 0
          episodeCount: 9
          imdbId: imdbId
          creators:
          - creators
          - creators
          directors:
          - directors
          - directors
          type: movie
          title: title
          tmdbId: 5
          seasonCount: 7
          firstAirYear: 6
          lastAirYear: 1
          originalTitle: originalTitle
          genres:
          - name: name
            id: 5
          - name: name
            id: 5
          streamingInfo:
            key: null
          status:
            statusText: Returning Series
            statusCode: 2
      properties:
        result:
          $ref: '#/components/schemas/show'
      required:
      - result
      type: object
    nextCursor:
      description: Cursor value to pass to get next set of the results. An empty string
        if "hasMore" is "false".
      type: string
    hasMore:
      description: Whether there are more results to be loaded.
      type: boolean
    searchFiltersResponseSchema:
      additionalProperties: false
      example:
        result:
        - seasons:
          - firstAirYear: 3
            lastAirYear: 2
            streamingInfo:
              key: null
            type: season
            title: title
            episodes:
            - year: 4
              streamingInfo:
                key: null
              type: episode
              title: title
            - year: 4
              streamingInfo:
                key: null
              type: episode
              title: title
          - firstAirYear: 3
            lastAirYear: 2
            streamingInfo:
              key: null
            type: season
            title: title
            episodes:
            - year: 4
              streamingInfo:
                key: null
              type: episode
              title: title
            - year: 4
              streamingInfo:
                key: null
              type: episode
              title: title
          year: 0
          episodeCount: 9
          imdbId: imdbId
          creators:
          - creators
          - creators
          directors:
          - directors
          - directors
          type: movie
          title: title
          tmdbId: 5
          seasonCount: 7
          firstAirYear: 6
          lastAirYear: 1
          originalTitle: originalTitle
          genres:
          - name: name
            id: 5
          - name: name
            id: 5
          streamingInfo:
            key: null
          status:
            statusText: Returning Series
            statusCode: 2
        - seasons:
          - firstAirYear: 3
            lastAirYear: 2
            streamingInfo:
              key: null
            type: season
            title: title
            episodes:
            - year: 4
              streamingInfo:
                key: null
              type: episode
              title: title
            - year: 4
              streamingInfo:
                key: null
              type: episode
              title: title
          - firstAirYear: 3
            lastAirYear: 2
            streamingInfo:
              key: null
            type: season
            title: title
            episodes:
            - year: 4
              streamingInfo:
                key: null
              type: episode
              title: title
            - year: 4
              streamingInfo:
                key: null
              type: episode
              title: title
          year: 0
          episodeCount: 9
          imdbId: imdbId
          creators:
          - creators
          - creators
          directors:
          - directors
          - directors
          type: movie
          title: title
          tmdbId: 5
          seasonCount: 7
          firstAirYear: 6
          lastAirYear: 1
          originalTitle: originalTitle
          genres:
          - name: name
            id: 5
          - name: name
            id: 5
          streamingInfo:
            key: null
          status:
            statusText: Returning Series
            statusCode: 2
        nextCursor: nextCursor
        hasMore: true
      properties:
        result:
          description: Array of the results matched with the query.
          items:
            $ref: '#/components/schemas/show'
          type: array
        hasMore:
          description: Whether there are more results to be loaded.
          type: boolean
        nextCursor:
          description: Cursor value to pass to get next set of the results. An empty
            string if "hasMore" is "false".
          type: string
      required:
      - hasMore
      - nextCursor
      - result
      type: object
    searchTitleResponseSchema:
      additionalProperties: false
      example:
        result:
        - seasons:
          - firstAirYear: 3
            lastAirYear: 2
            streamingInfo:
              key: null
            type: season
            title: title
            episodes:
            - year: 4
              streamingInfo:
                key: null
              type: episode
              title: title
            - year: 4
              streamingInfo:
                key: null
              type: episode
              title: title
          - firstAirYear: 3
            lastAirYear: 2
            streamingInfo:
              key: null
            type: season
            title: title
            episodes:
            - year: 4
              streamingInfo:
                key: null
              type: episode
              title: title
            - year: 4
              streamingInfo:
                key: null
              type: episode
              title: title
          year: 0
          episodeCount: 9
          imdbId: imdbId
          creators:
          - creators
          - creators
          directors:
          - directors
          - directors
          type: movie
          title: title
          tmdbId: 5
          seasonCount: 7
          firstAirYear: 6
          lastAirYear: 1
          originalTitle: originalTitle
          genres:
          - name: name
            id: 5
          - name: name
            id: 5
          streamingInfo:
            key: null
          status:
            statusText: Returning Series
            statusCode: 2
        - seasons:
          - firstAirYear: 3
            lastAirYear: 2
            streamingInfo:
              key: null
            type: season
            title: title
            episodes:
            - year: 4
              streamingInfo:
                key: null
              type: episode
              title: title
            - year: 4
              streamingInfo:
                key: null
              type: episode
              title: title
          - firstAirYear: 3
            lastAirYear: 2
            streamingInfo:
              key: null
            type: season
            title: title
            episodes:
            - year: 4
              streamingInfo:
                key: null
              type: episode
              title: title
            - year: 4
              streamingInfo:
                key: null
              type: episode
              title: title
          year: 0
          episodeCount: 9
          imdbId: imdbId
          creators:
          - creators
          - creators
          directors:
          - directors
          - directors
          type: movie
          title: title
          tmdbId: 5
          seasonCount: 7
          firstAirYear: 6
          lastAirYear: 1
          originalTitle: originalTitle
          genres:
          - name: name
            id: 5
          - name: name
            id: 5
          streamingInfo:
            key: null
          status:
            statusText: Returning Series
            statusCode: 2
      properties:
        result:
          description: Array of the shows matched with the title.
          items:
            $ref: '#/components/schemas/show'
          type: array
      required:
      - result
      type: object
  securitySchemes:
    X-Rapid-API-Key:
      description: "Rapid API Key can be retrieved from [Rapid API](https://rapidapi.com/movie-of-the-night-movie-of-the-night-default/api/streaming-availability/pricing)."
      in: header
      name: X-RapidAPI-Key
      type: apiKey
